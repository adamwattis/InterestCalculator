{"version":3,"sources":["../src/lib/dom.ts","../src/lib/template.ts","../src/lib/modify-template.ts","../src/lib/directive.ts","../src/lib/part.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/template-factory.ts","../src/lib/render.ts","../src/lib/default-template-processor.ts","src/lit-html.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","components/nav-bar.js","components/form-input.js","components/frequency-selector.js","components/calculator-form.js","calculator.js","components/calculator-results.js","components/calculator-graph.js","components/main-button.js","components/card-flipper.js","components/info-modal.js","components/app-container.js","index.js"],"names":["NavBar","LitElement","constructor","logo","properties","type","String","render","handleClick","styles","event","newEvent","CustomEvent","dispatchEvent","customElements","define","FormInput","title","name","value","prefix","suffix","Number","handleInput","detail","target","FrequencySelector","label","handleChange","CalculatorForm","beginning","rate","years","contribution","contributionFreq","compoundedInterest","principal","time","compounded","Math","pow","decimalRate","contrib","compoundedTotal","ret","console","log","interestIncreases","interests","i","interest","push","CalculatorResults","endingMoney","endingInterest","map","incr","index","toFixed","total","CalculatorGraph","incrementPairs","pair","increments","increases","scaledIncrements","maxRange","length","scaled","scale","inc","MainButton","CardFlipper","state","InfoModal","open","require","AppContainer","flip","infoModal","handleInfoButton","Boolean","setTimeout","element","app","window","onload","document","getElementById","appendChild","get","appElement"],"mappings":";;A2BAA,APAA,AGAA,ADAA,AGAA,APAA,ACAA,AOAA,AFAA,APAA,AWAA;;ADEA,APAA,AGAA,ADAA,AGAA,APCA,ACDA,AOAA,AFAA,APAA,MQAMwE,APCAxD,ACDAU,AOAAgD,AFAAH,APAAvE,MAAN,GCCA,AQDA,CFAA,CCAA,IRAqBC,EEArB,CDCwBA,AQDAA,CFACA,CCACA,MNAMA,WFAhC,CAAgC,ECChC,AQDA,CRCmC,AQDA,AFAnC,CCAA,ADAoC,CCAC,KNArC,CAA2C;AME1CC,APCAA,ACFAA,AOCAA,AFAAA,APAAA,EQAAA,APCAA,ACFAA,AOCAA,AFAAA,APAAA,WQAW,APCA,ACFA,AOCA,AFAA,APAA,GQAG,APCA,ACFA,AOCA,AFAA,APAA;AUDf,APAA,AGEA,ADDA,AGCE,APCA,ACFA,AOCA,AFAA,APAA,AWHF,MLGM0D,ADDAR,GMFG7C,IVKP,AMDA,EIJF,CAAgB4E,EVKTlE,AMDAA,GDDP,EDDA,AJGE,AMDA,AIJF,EAAyBmE,CVKV,AMDA,ENAb,AUJF,ELG8BnF,ALG5B,AUN4B,ENEEA,CEC9B,ENGKiB,IAAL,GAAY,EAFZ,EAGA,KAAKb,CKJP,CAAyC,CDDzC,CAA2C,AJKzC,GAAY,EAHZ,EAIA,KAAKc,KAAL,GAAa,EAJb,EAKA,KAAKC,MAAL,GAAc,EALd,EAMA,KAAKC,MAAL,GAAc,EANd;AHNF,ALeA,APfA,AHAA,AIAA,AGcA,AEAA,AJAA,ACIA,ALlBA,AYAA,AUOCnB,ADDAA,AGAC,APOA,ACRA,AOCA,AFCA,APDA,AWHDmF,ELIAnF,ADDAA,AMHAmF,MAAM,CHGAZ,ANDA9C,AOCAgD,ATAAxE,AWHCmF,ILII,ADDA,AIAV,ATAA,CQAA,ANDA,CSFD,CLIc,ADDA,AHAb,AOAY,ATAA,CQAC,CRAb,AWHe,GTGVpE,COAL,CDAA,CGHqB,CTErB;AjBSF,AMCA,AmBXA,AJIE,ADDA,AGAA,ANAA,AOAA,ATAA,AWHAqE,IAAAA,QAAQ,CAACC,cAAT,CAAwBL,OAAxB,EAAiCM,WAAjC,CAA6CL,GAA7C;AlBJF,AHeA,AEAA,AJGA,ACEA,AepBA,AESE,ADDA,AJOoB,AMNJ,AIJhB,GAFD,MLMMtD,ADDAA,IJOK1B,AMNAK,KDAV,ADDA,CECgB,CDChB,ADDA,EEAmB,CNMC,EKLfsB,ADDAA,CJMkB,GKNvB,ADDA,ECGA,ADDA,KCCKC,ADDAA,KCDL,ADDA,ECIA,ADDA,KCCKC,ADDAA,YCFL,ADDA,ECKA,ADDA,KCCKC,ADDAA,gBCHL,ADDA;ApBRF,AMAA,AaCA,AMIA,APAA,AGSE,ADDA,AGJgB,APOhB,ACPoB,AOAA,AFCpB,APDoB,AWHrB,MRDKL,KFWG,AMNA,ECDGpB,ANAAL,AOAAA,ATAAA,MQAM,CLJlB,EKIqB,CNAC,AOAA,ATAA,GEAG,AOAA,ATAA,GGJIH,EIKhB,oBJLb,CAAwC;AbWxC,AECA,AJjBA,ACAA,AeEA,ADKCC,AKGC,APOCe,ACPD,AOAA,AFCF,APDE,EGHDf,IFUEe,KOPM,APOD,ACPC,AOAA,ATAA,EGHG,AFUF,GEVK,eKGF;AJPb,AMGA,APEE,AGQoB,ADDrBV,AGJD,APMWF,ACNRsB,AOAAgD,AFCH,APDGxE,AWHH,ENOCI,IHJEoB,AOAAgD,ATAAxE,AWHGiF,ENOC,AJEI/E,CGdF8B,AOKA,CFGF,ATAA,CKIG,AHJF,CDMO,AQNN,ATAA,AWHGrB,CLQAV,AJLF,CDMOE,SKDK,GAAG,AKRC,CPL1B,AOK2BoF,CPLCtD,EOKhB,CAAmB,MPL/B,EAAuCL,IAAvC,EAA6CM,COKjC,CAAZ,EPLA,EAAmDJ,YAAY,GAAC,CAAhE,EAAmEC,gBAAgB,GAAC,CAApF,EAAuF;AdevF,AElBA,AYIC,ADKC,AGQA,ADDA,AGJF,APKU,ACNC7B,AOADA,AFEV,APFUA,AWFV,MPLKiC,AOKCqD,CVOG,CCLEtF,AOADA,ATAAA,CGFHyB,EGQE,ADDA,CHLM,AOAD,ATAA,EEAGxB,AOADA,ATAAA,EIPD,AOKC,ERAd,CCLgB8B,AOKC,ERAA,EQAIgD,GRArB,AQAiB,EPLQ,ADMzB,AQDF,GPL8B7C,CCYhB,CFNPR,ECN2B,CAACS,CDMjC,ECN4B,CAAU,ADM1B,GADZ,CCL0CC,CDO1C,KAAKT,KCPgD,ADOrD,CCPsDD,EDOzC,ECPwC,CAAzB,CDK5B,CCL8DM,CDQ9D,GCR4B,CAAZ,CDQXJ,ECRiEG,SAAvE,CDQC,GAAoB,KAHpB,EAIA,KAAKF,gBAAL,GAAwB,GAJxB;ANTF,AOKC,AMED,APOE,AGICJ,ADDH,AGJA,APKGZ,ACPO,AOAD,AFGT,APHS,AWATX,MPNKmC,AEaFZ,ALAAZ,AUPG,CTDG,ASCF,GVOA,EAAE,AUPH,CPNM,COMEyE,CLOF,CFbG,CAACzD,AEaF,OKPR,CAAN,QPNgC,GAAGD,YAAnB,GAAkCM,IAAI,CAACC,GAAL,CAAU,IAAIC,WAAW,CAACV,IAAD,CAAzB,EAAkCM,IAAlC,CAAlC,GAA4EH,gBAAgB,GAAGD,YAAhG,IAAgHQ,WAAW,CAACV,IAAD,CAAzI;AdcD,AcbCW,AEYcrC,ADAf,AGJA,APIUA,ACNPa,AOFM,AFKT,APLS,EIJRwB,GKIC,ATAA,CEECxB,EIMYb,ALALA,CGZF,CFMD,EENIqC,AEYQ,ADAP,AJAE,ACNL,EIMYpB,ALALhB,GIAC0B,EDZC,GAAIE,ACYV,GAAa,KAAKF,KAAlB,GDZ0B,ACYA,GDZGC,ACYC,YDZpB,GAAkCI,IAAvD,gBCY2E,KAAKN,IAAL,GAAY,KAAKA,IAAjB,GAAwB,GAAI,oBAAmB,KAAKsB,WAAL,EAAmB,wBAAuB,KAAKC,cAAL,EAAsB;ADX1L,AMCD,APQC/C,AGEa,ADCd,AGJA,APGS,ACNCF,AOCR,AFGF,APHE,EGGDE,KGCQ,ALDA,CEAF,ADJGF,CELFiC,EDSE,CDJI,EAAEhC,KELE,GAAGoC,OAApB;AdaD,AcZC,ADSC,AGECX,ADCH,AGJA,APGG1B,ACPM,AKKT,MDEG0B,ALAA1B,IKAI,ALAA,CEFE,CGEA,ALAA,oBEFK;ALNd,AKOA,AGCUA,ADEV,AGJA,APEUA,ACTD,AOKRE,AFGD,APHCA,ESAAA,ATAAA,GELC,EGWK,CCFGF,ALAAA,AQJH,ATAA,GSAG,ATAA,CMII,ALAA,EKAEiB,ALAAhB,4BIES,KAAKwB,SAAvB,EAAkC,KAAKC,IAAvC,EAA6C,KAAKC,KAAlD,EAAyD,KAAKC,YAA9D,EAA4E,KAAKC,gBAAjF,EAAmGqB,GAAnG,CAAuG,CAACC,IAAD,EAAOC,KAAP,KAAiB,qBAAK,6BAA4BA,KAAM,MAAKD,IAAI,CAACE,OAAL,CAAa,CAAb,CAAgB,QAApL,CAA6L;AfrBpM,AcUA,ADSA,AGAS,ADGT,AGJA,APCS,ACLP,AOEA,AFGF,APHE,OMCO,ALDA,EGNAf,EKMA,ATAA,aINT,CAAyBP,OKMX,ATAA,EINd,EAAoCL,IAApC,EAA0CM,IAA1C,EAAgDJ,YAAY,GAAC,CAA7D,EAAgEC,gBAAhE,EAAkF;AlBMlF,AkBLC,AMFD,APWA,AGAGF,ADGH,AGJA,APCGb,AQHH,AFGA,APHA,MdDM,AkBLDyB,AMFCzC,AJWH6B,ALAAb,GGTK,CMFE,CJWF,ALAA,CGTGiB,CMFEwC,AJWH,ALAA,GfJM,GAAG,CwBPC,CNEA,AMFC,ExBOE,CkBLAzC,IKMK,EvBDT,EAAnB,CuBCiCwC,IAAL,IAAa,CLNA,CAACvC,IKMd,GAAsB,ELNT,CMFrB,CNEiCL,AMFrD,EDQ4B,ELNa,CKMkB,CLNAM,IAAlB,CKMyB,CLNDJ,YAAxB,EAAsCC,gBAAtC,CAA9B,GAAyFA,gBAAgB,GAAGD,YAAnB,GAAkCI,IAArI;ANGM,AZSP,AHLA,AIsBA,AHxBA,AYFA,AQFCQ,ADSD,AGDWxC,ADIX,AGJA,APAWA,ACJVE,AOED,AFGA,APHA,EINCsC,AFIAtC,CGAC,GPFW,EQMFF,ALAAA,ACJJ,CEJC,CAACyC,CFIC,CIIK,ALAA,CGRd,CAAYF,AEQItB,ALAAA,GGRhB,gBNEuC,GAAI,MAAM,CAAC,UAAR,KACtC,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,CAAgB,YADX,KAEtC,wBAAwB,QAAQ,CAAC,SAFK,IAGtC,aAAa,aAAa,CAAC,SAHzB;AMDN,AMFD,APWA,AGFU,ADKR,AGJF,APDU,ACHR,AOEF,AFGA,APHA,MURMuD,CJMG,ALDA,EGHDjC,EFIC,CEJR,MMFD,SAA2B3C,AVQA,KEFb,AFEkBE,IAAK,aURrC,CAAsC;AZQtC,ALAA,ARHA,AmBFC,AMDAD,APUD,AGFG+B,AECH,APDGb,ACHH,AOEA,AFGA,APHA,EUPClB,IZMK,AbHA,AqBKH+B,ALAAb,MAAM,CSRG,CTQD,ESRI,EJQA,EAAE,ErBLK,CaGC,EbHE,CaGC,MAAM,EAAhC;AfEO,AELsB,AMuB7B,AmBzBE,APUF,AGHkBf,ADMI,AGJtB,APFYA,ACFZ,AOEA,AFGA,APHA,MjBAa,EuBAKA,ALANA,IKAU,ALAN,CIMJD,AHRC,CIEWkB,ALANhB,CEGH,GpBHU,AmBFPqB,ECKEG,CpBHQ,EsBMN,AHRE,GGQC,EtBNU,CoBGL,KpBHF,KAAkB,WAAlB,IACxB,MAAM,CAAC,cAAP,IAAyB,IADD,IAEvB,MAAM,CAAC,cAAP,CAA4C,yBAA5C,KACG,SAHD;AeAD,AfKN,AEVA,AE4BO,AQnBP,APLA,ACNA,ALMO,AoBJP,AMDE,APUF,AGJiB,ADOf,AGJF,APHW,ACDX,AOEA,AFGA,APHA,GOZE,GTWW,AXuBA,AHxBA,CsBHJ,ALDA,EGAAiB,AMDFjB,ELaE,CrBRU,EGwBE,CWvBf,AdDgB,CcCA,CXuBE,CuB7BtB,CvB6BK,CexBa,CQLD,CVOG,EhBFS,A0BL7B,CRKuBZ,CEJzB,AMAE,CNAyBkB,AJMA5B,EEFG,ClBAO,CAAC,A0BJ/BuB,I1BImC,A0BJxC,C1BIyC,AoBJ3C,EAAsCA,AMAxB,AVMyB,CUPrC,EAEA,C1BGoC,AoBJtC,CFI2C,ClBAN,AoBJOM,CpBIb,CAAsB,A0BH9CL,ENDP,AFIgDJ,EEJEK,CpBInB,A0BH7B,C1BGyD,CAA5B,CAA8B,A0BH9C,EAFb,E1BKK,A0BFL,ERE2D,EEJC,CMEvDA,ENFwD,CAA/D,EAAkEC,OMEhE,GAAoB,GAHpB,EAIA,CNHF,EAAoF,EMG7EA,gBAAL,GAAwB,CAJxB,EAKA,KAAK4C,IAAL,GAAY,KALZ,EAMA,KAAKC,SAAL,GAAiB,KANjB;AZWA,ALJI,ARJN,AE4BA,AK3BO,ARGP,AoBLC,AMKC,APIF,AGJG7C,ADOAJ,AGJH,APHGT,ACDH,AOEA,AFGE,APHF,EFGE,CWVA,GhBMW,ADHA,AYFR2B,AEKFd,ADOAJ,AJPAT,KTHe,CSGT,CHIP,CAAY,ANPO,ASGV,CGLG,ACYF,CFHI,CEGF,CbVW,AYFR,EAAhB,CNSC,AKAmBO,CGJF,CRIY,CQJV,CdHA,EAAd,GCGD,CAA+B,CKInC,CKAgC,CLAc;AAC5C,ADqBJ,AJzBE,ADFF,AGKA,ACNA,AOOA,AGLsBvB,ADOPA,AGHf,APJYA,ACAZ,AOEE,ATAF,GARE,GHgCI,ECrBE,AQLcA,ADOPA,AJPHA,IKAc,ADOP,AJPH,EKAYiB,ADOPA,AJPHhB,GHKD,KAAK,GDqBG,GACrB,CAAC,OAAD,EAAkB,CCtBlB,EAAqC,EDsBrC,KAAqD;ACrBnD,ADsBA,ANPA,AazBL,AMMAC,APID,AGNqB,ADOP,AGFd,APLW,ACCX,AKKsB,APHpB,EHyBI,Aa1BLA,KNNK,ACUG,CRsBG,Aa1BL,Cb0BM,ANPG,EazBN0C,AMMA,CZIE,AMVD,CGUC7C,EHVA,CNUI,AMVf,EAAc6C,CAAC,ENUJ,CACF,CDqBJ,AOhCcZ,AGUE,CVsBM,ANPtB,CAA0B,CgBfP,CHVxB,EAAyBY,CPgCpB,AOhCqB,CPgCQ,ANP7B,CazBL,CbyBqD,CazBvB,IPgCzB,EAAsC,KAAtC,EADmD,CAEnD,yCCvBM,CAAN;AAED,ADsBC,AFxBN,AJgBE,AHpBI,ACDN,AeJE,AMMA,APIF,AGZS,ADaNlB,AGFH,APZS,ACQT,AOEkB,AFGhB,KDZA,ALDA,CV4BI,AHpBO,AiBMVA,EDXGmB,ECWC,CKLE,AHIA,CFCA,CIJGzC,GLPE,GbyBK,AazBFkC,AKOC,GlBkBI,AHpBhB,AqBEe,CrBFQ,SsBCf,ENNkB,CAACP,CbyBG,CAAC,GAAf,CAAmB,GazBT,EAAYL,CbyBG,CAAC,EazBhB,EbyBV,AazB4BkB,CbyBhD,AazB8B,EAAqBhB,YAArB,EAAmCC,gBAAnC,CAA9B;APkCI,ATvBJ,AgBVAc,AMMF,APIA,AGNE,ADMQ3C,AGDV,APLE,ACCF,AOEE,AFGCY,APFe,EZEhB,EgBVA+B,EGUC/B,EFAOZ,GIHD,AFGD,CFAM,CjBAZ,AgBVS,AGUD,APFEI,CZGN,AgBXM0C,ACUI7B,IDVd,CAAe4B,AJQC,GZEhB,AYFmB,EZGK,GgBXxB,IKOW,ErBGX,EAEI,OAFJ,EAE0B;AUAxB,ADsBE,AVLC,AQpBP,AJgBE,AHpBiB,AgBJjB,AMMF,APIA,AEDS,AGAT,ANJA,AOEA,AFEW7C,APDT,GEZA,GfgCW,AIJP,CcjBG,CEEEA,CTEF,AVPU,EYIV,COCM,CpBmBK,CoBnBHC,ETEb,AXiBmB,ACxBJ,EDwBZ,CWjBY,APaA,AHpBiC,EAAjC,AsBEEH,GnBkBG,CmBlBE,CZKtB,KEHS,ETgBX,EAAiC,UmBlBU,KAAK6E,gBAAiB;AZMhE,ADsBG,AP/BC,ACsBH,AHbA,AJPG,A0BEP,APIA,AGNkB,ADKfhD,AGAH,APLkB,ACChB,AOEF,AFCU,APAV,GFTsB,CAcpB,APWE,EDtBS,ANEA,AqBKVA,GjBEM,EiBFD,ECLIvB,ADKF,AJLEA,EEMG,CnBNQ,CMFC,ACsBP,AHbb,EJPsB,AsBAR,ALAA,CXFU,ACsBR,AHbA,AeDAsB,EGNC,ALAA,EEMI,CbRE,CNEM,C0BEN,CtBKvB,CET8D,GNE3B,A0BEP+C,IAAL,C1BFpB,E0BEgC,MAAZ,GAAqB,MAAO;AZQrD,ADoBI,AdzBC,AONL,AKKF,AJiBM,AHbF,AgBZH,AMOD,APIA,AGNE,ADISzE,AGCX,APLE,AQGF,AFDS,APET,KOFE,CxBEW,AQgBP,EchBKA,CfLL,AFQG,AgBZD2C,EEKC,ALAA,CIIM,EfLJ,AeKM1B,IdgBC,AHbd,AgBZH,CrBSyB,AOLV,CCqBI,CHbC,CLFjB,CAAC,AONC,CCqBkB,GDpBlB,EAAE,CFOJ,CGagB,AepBP,ALAA,ClBKT,CQcgB,CRbf,EONU,GPKX,EAEC,AOPG,GPOH,C2BLwC,CpBFpB,CPOH,G2BL4BC,C3BG9C,EAGC,CORG,IAA6B,CPQhC,E2BNyD,C3BMrC,GORmB,CPKxC,IOLiC,CPQE,IORe,UAAhD,CAFJ;APWI,AORL,ACoBK,AHbF,AJPG,AoBLN,AMOD,APIA,AGNA,ADGU,AGEV,APLA,ACCkB,AOElB,AFCE,APAF,CVRO,KCwBD,APpBO,CqBAJ,EtBQI,AKDJ,IcNGd,CnBOM,CQYH,CHbX,AeDY,CZcC,APpBO,EDQD,AKDJ,AcND,ClBDS,COoBN,AYdAmB,CpBEf,AmBPe,EnBOO,AQYX,APpBc,EIO3B,IJPuB,CAAW,EmBMJ,CnBNO,MAAM,IAAI,UAAU,EAAlC,CAApB;Aa6BD,AdpBE,AYLR,AJcoB,AHVjB,AJNH,AYJA,AcKA,APIA,AGNA,ADGGK,AGEH,APLA,ACCE,AOEF,ATCA,KTaI,CKpBE,ASMHA,CTNI,EC+BM,CdpBC,CAAC,AmBPN,GL2BH,AdpBY,IsBLH,CtBKS,CAAC,AsBLR,WtBKT,AmBPK,CNJb,GACI,CAAwB,IAAxB,EAAiC,IAAjC,KAAsD,IAD1D;AEWgB,ADqBX,AJ1BH,AVMM,AQYJ,AazBJ,AMOA,APIA,AGNA,ADEkB5B,AGGlB,APLA,ACCA,AOEA,AFCCE,APAD,CHcA,CJhBE,AcEDA,ExBIO,AQYJ,EObE,EOLYF,AEEX,CHTEoC,EGSC,CFFY,CtBML,CAAC,AsBNMnB,EPKR,EPaE,CObF,APaG,AmBlBA,CNPnB,CAAqBS,CbyBjB,CAAmB,CmBlBCD,CNPxB,CrBaQ,CAAuB,AqBbJ,CXOC,CACtB,AFiBuB,CAAC,ERZtB,C2BN0B,C3BMK,AQYnC,EElBwB,AFkBQ,EEjBZ,EVKhB,EUNoB,EACU,KFiBlC,EElBwB,EAEtB,OAFsB,EAEA;AKIxB,ALHA,AVII,AYLR,AJiBG,AHbD,ACPF,AOiHO,AQtHN,AMOD,APIA,AGNA,ADCiB,AGIjB,APLA,ACCA,AOEA,AFCE,APAF,EZGE,ELCM,EMRF,AOiHO,CSpHJ,CPUD,AVAA,CLCK,AKDJ,AgBZDC,CXSE,CcAD,CxBIO,AMRJ,CSOC,AfCL,AqBbI,CMOE,CtBKN,ACPO,CIIC,AWTD,ChBYoB,EKHhB,AWTlB,AMOkBA,ErBFE,CAAC,AOiHO,CH7GN,AiBFC,CZKhB,ALHgB,CAAD,AG6GoC,CH7GvD,GKGyB,GSHf,ElBJC,ISOX,ATNA,ESMoC,UTNvB,CAAC,YAAd,CAA2B,UAA3B,EAAuC;ASOrC,ADqBN,AdpBO,AOXA,AFUH,ACPwC,AOkH1C,AQvHD,AMOD,APIA,AGNA,ADCGG,AGIH,APLA,ACCA,AOEA,AFCA,APAA,EXJ4C,AOkH1C,ICtFI,AP/BO,AeIVA,EjBMK,CAAC,GAAG,ACP0C,CDOlD,AQ2GS,CPlH4C,AOkH3C,CPlH0C,AqBEzC,CpBLQ,GAAI,ADGoC,AOkHlD,CchHOF,CdgHU,CSjHX,EfJO,AeIL,CTiHR,AchHa,Eb0BC,ADsFiB,CNrH6B,EOgCrE,CAAC,OAAD,EAAkB,UAAlB,KAAiD;ACrB/C,ADsBA,AJ1BF,AVKC,AOXH,AK9BF,AJqDE,AFrByC,AOmHvC,AchHJ,APIA,AGNA,ADAsB3B,AGKtB,APLA,ACCA,AOEA,AFCA,APAA,CjBNO,AMCH,CADJ,IEsBM,AgBhBA,EVyBM,AJ1BJ,AYHcA,CfHb,EiBOEY,CX8GC,ASlHc,EZGZ,AHNA,ACuBA,AcpBcK,CfHb,CMqHX,AW9Ga,ChBgBA,EEjBE,GAAf,AHNK,AoBKa,CpBLC,CGMC,GiBDGW,CpBLlB,ECuBqB,CAAC,EDtBzB,MoBIkC,InBkBvB,CAA2B,GAA3B,CAA+B,MAAM,CAAC,OAAtC,CAAf;AOZI,ADqBO,AJzBP,AVMN,AOXM,AFQF,ACNJ,ALDO,AYmHD,AchHN,APIA,AGNA,ADDqB,AGMrB,APLA,ACCA,AOEA,AFCA,APAA,GVNO,CO8BM,CP9BJ,CDEH,ALDO,Ea6BD,CTtBH,CUCC,ARTI,CMoHH,CH/GC,EHLO,CFQJ,AeAA,GP4GT,CNpH0B,AFQ5B,ACNe,CCFc,AaQbD,CVHC,CJHC,CDMC,CKHC,CUGE,CbRa,ADEb,ALDO,A0BGP,CpBJc,CGKZ,ALGA,CJPQ,E0BGLE,IpBJC,AFQ5B,CERG,ANCA,CcQD,ARXJ,AFUmC,EUCE,GTPP,GAAhC,EqBEgD,KjBCxB,CAAsB,OAAtB,EAA+B,IAAI,CAAC,KAAL,CAAW,CAAX,CAA/B,EAA8C,OAA9C,CAAlB;AKKE,ADoBW,AJxBb,AHLL,ACqBC,AHbI,ACLN,ALDA,AYkHQ,AchHR,APIA,AGNA,ADPS,AGYT,APLA,ACCA,AOEA,AFCA,APAA,CVVO,EiBML,CV2BiB,CQlCjB,Cd0BI,IHbI,GUCG,ALJA,CFgBC,AHbA,CQ4GC,IL/FI,AHbA,CQ4GC,EH/GE,CAAC,AG+GA,CE3Gf,CF2GY,EE3GO,CLJrB,AFgBJ,AHbI,AQ4GsB,EL/FE,AHbA,CUCC,CF2GvB,YE3GmB,EAAnB;ADoBI,AJvBP,AHJL,ACoBI,AHbI,AsBJR,APIA,AGNA,ADDE,AGMF,APLA,ACCA,AOEA,AFCE,APAF,MHsB+B,ETpBvB,GGaG,CHbC,CAAC,GSoBP,AMpBU,GZaZ,EHbI,AeAaN,CfAC,MAAM,CAAC,CAAD,CAApB,EeA0B;ALC1B,ADoBF,AZ7BA,AMsBH,AHbI,AQ2GD,Ac/GN,APIA,AGNA,AEKA,APLA,ACCA,AOEA,ATCA,GTEsD,CAepD,KMKW,AZ7BG,EWoHL,EE3GE,IF2GP,Gc/Gc,IZIZ,CAAiB,AYJAE,OzBLnB,CACF,CyBI+B,EZI3B,CAA6B,IbT/B,CaSoC,CbRlB,MaQhB,ObTF,EAC0C;AaSzC,ADoBC,AJxBJ,ARJF,AMuBA,AK4FI,Ac/GN,APIA,AGNA,ADDkB,AGMlB,APLA,ACCA,AOEA,AFvCoC,APwCpC,GQhCE,CXsDM,GCvBF,CDsBO,AJvBL,ARJA,GWmHG,EE3GE,AOPDrB,CZGE,CiBAC,Cd+GT,GH/Ga,AYHD,CKGEsB,EjBAhB,AYHiB,EZGG,AiBAC;AZKjB,ADoBA,AJxBF,ARLG,AOAF,AJQD,AQ4GE,Ac/GR,APIA,AGNA,ADDE,AGMA,APLF,ACCA,AOEA,ATCA,ADaA,IFSQ,AZ7BC,EOAI,AJQP,CAAC,IHRS,AoBEP,CRyBI,AL3BM,CMSN,ALJA,ARLK,CQKJ,CDJV,CAAC,AkBIW,EjBAE,GiBAGC,ClBJjB,EMQI,ANPH,EkBGsB,CZIA,IAAnB,AOPK,EbDT,CCIU,CAAc,ADFvB,OCES,ADJV,ECIiC,GDFI,CCEA,CAAC,KAAL,CAAW,CAAX,CAAvB,EAAsC,OAAO,CAAC,YAA9C,CAAD,CAAP;AKKC,ALJF,ARNc,AOIb,AJKD,ACLC,AOiHE,Ac/GR,APIA,AGNA,ADDA,AJCA,ACCA,AOEA,AFAAlB,APCA,MfRmB,AOIT,AHAG,IGAC,GAAG,CeGH,CAACC,GfHO,CAAC,CHAjB,CAAqB,AkBG3B,CfHiB,AeGK,CfHK,AkBEJ,KAAKkB,IlBFX,CAAX,EeGN,EAAqCsC,GGDI,OHCzC;ATIK,ADmBG,AZ9BU,AMwBhB,AFdA,ALRI,AYoHE,Ac/GR,APIA,AGNA,ADDA,AGOsB,APNtB,ACCA,AOEA,ATCA,ADaA,EVZE,GJVM,CDEK,EOsBL,GAAG,EFdT,AmBCUnE,CjBaE,AFbR,ALTA,CAAe,AYoHN,KL9FK,AK8FA,CL9FC,AFdnB,EACmC,AmBAf,CZ2GE,EY3GC,CEJE,CnBiBb,AK8FC,CL9Fc,AFd3B,EAC+D,AO2GlC,Cc/GC8B,CnBiBlB,CAAoB,CFdhC,CO4Ga,CP1GT,EO0GiC,IAAI,CAAC,EP5G1C,EAEgC,AqBLe,EnBiBnC,CAAZ,CAjBoD,CAmBpD,AK4FqC,CAAe,KAAf,CAA/B;ACvFA,AJxBJ,AVIG,AEXsB,AOKvB,AJKF,ACGA,ALPF,AYyGE,AcvGJ,APIA,AGNA,ADDA,AGOE,APNF,ACCA,AOEA,ATCA,EhBJE,EayBM,AZ/BqB,EFWhB,ASNH,ECEF,CLGC,ACGA,CGRK,CgBOL,CXmBO,CAAC,AbzBf,CSCY,ATDA,CQDK,AJKJ,CCGX,CNFoB,CcoBR,CJxBG,ALGf,ACGe,CQkB6B,AdnB5C,ACNF,CDMG,CULD,ATDkC,CIIf,CKHC,ADFlB,EAAwB,AHQ1B,EDHwB,CJJ1B,CDME,CCN8D,CDM5C,GKFlB,ELEA,AKFiC,ELEG,GAAA,GAAiB,IAArD,KAAmE;AeAnE,ADoBM,AJxBJ,AVKA,AEbE,AOMA,ADqBN,AHhBI,ACGF,ALXO,A0BMX,APIA,AGNA,ADDA,AGOGuC,APNH,ACCA,AOEA,ATCA,ADaA,ERGE,IMKQ,AZhC4B,AuBanCA,GzBAU,AMCJ,ALXE,COwBD,AHhBA,CUCC,AUCH,CXmBQ,CAAC,AJxBJ,AFmBA,AiBdH,CfLI,AVKI,AEbhB,AGWY,AJRH,CKWP,CSFY,AKCA,CnBVmB,CSKjB,AJMA,CNDK,AKFJ,AJRR,EmBUUxC,CpBAf,EAAsB,AMCxB,EGRgB,ADqBM,COftB,ADoBM,ANLiB,CMKK,ATrB1B,EAAwB,GeEI,CNmBxB,CAA6B,AL1B/B,CDqBK,CCrBkB,ADqBM,GAAxB,CAA4B,CMK/B,EAAsC,ANLnC,CEnBC,AFmBZ,CEnBqC,ADFC,CAAC,EK0B/B,IJxBI,EAAkC,EDFxC,ECE4C,CAAC,KAAL,CAAW,CAAX,CAAlC,EAAiD,OAAjD,CAAD,CAAP;AKKH,ADoBM,AJxBJ,AVKG,AEbN,AOMM,AJKA,ACGJ,ALRA,AYiHA,Ac9GJ,APIA,AGNA,ADDA,AGMW5B,APLX,ACCA,AOEA,ATCA,ADYA,IPjBQ,IPNA,AGWA,AoBCGA,ChBNE,AHQJ,ALRA,CDOK,ASPA,CTOC,Aa0GJ,CR5GC,AoBCG,ChBNP,AJKK,ACGT,CNDc,AEbJ,AOMI,AgBMDC,EnBED,ALRZ,AYiHA,CXtHE,EFYkB,AKFhB,AJLW,CDOM,AMCrB,GGRI,EPLM,AOKe,CPLd,ADKX,C0BGuB,ElBHM,ETOzB,CSP4B,AkBGJE,IlBHQ,MPLlC,CAA0B,AyBQY,OzBRtC,COK8B,CPLK,AOKO,GkBGO,GlBHP,CAAA,CkBGYsE,IAAL,ClBHP,CAAA,CkBGmB,CzBR7D,EAAqD,IAArD,AyBQiD,EzBRU,CyBQY,IzBRvE,CADJ,MyBSuF;A3BKjF,AEZN,AKCI,AEIyB,ADoB7B,AHfK,ACGH,ALPA,AYgHD,Ac9GH,APIA,AGNA,ADDA,AGKU,APJV,ACCA,AOEA,ATCA,ADWA,GHoF2D,Cb7FnD,EEZF,AKCO,AEIkB,ADoBzB,GFZG,CLPC,GDMO,CAAC,AQaJ,CNzBC,EkBYE,ClBZC,AIad,CEYe,ECpB2B,AHQzB,CcDClD,CXPS,ARCR,CMLjB,AoBOkB,C3BIhB,AOXuB,CPWD,ACNI,EOmBhC,APnBE,C0BEyBmD,CnBiBC,AFZ1B,CNDI,GoBA2B,IOJX,GAAiB,MAAjB,CzBRwB,CAAC,CyBQC,IzBRF,CAA9C,CyBQuD;AZIvD,ADYW,AJjBT,AVMI,AEZN,AKOA,AEJ8C,ADsB5C,AHfC,ACGF,ALPC,A0BEJ,APIA,AGNA,ADDA,AGGS,APFT,ACCA,AOEA,ATCA,ADUA,EDTE,ARJA,COgBI,CdXE,CSTwC,AgBK9C,CvBRI,COK4B,ETOrB,CeDH,ALLA,ARNA,ADMA,EDMM,CeDN,AfCF,AEZK,AKOX,CAAY,AEJkC,CAAZ,ARGrB,CQHP,EPHU,ADMQ,CSAP,ARNA,CDMf,CMCF,ANLgE,CSI5C,ATClB,CMA4B,GGDN,CHCxB,CLPgB,CAAhB,AKO4C,OAA5C,EAA0E,aGDtD,CAAuB,OAAvB,EAAgC,IAAhC,EAAsC,OAAtC,CAAlB;AKMA,ADmBC,AJxBD,AVMG,AEZL,AKIA,AEEM,AGjCR,AJoDI,AHfD,ACID,AOwGA,Ac9GF,APIA,AGNA,ADDA,AGKE,APJF,ACCA,AOEA,ATCA,ADSA,CFAA,CDmGE,CctIA,AFvBmC,ChB6C7B,ADmBJ,AiBbH,EvBZK,EOMM,CFFV,AEEW,EMKF,ALLA,CFmBC,EDrBV,CLJa,AMyBA,AK6FA,CE3GC,AF2GA,CNlHN,CLJQ,CAAC,AOMX,ADmBW,CEnBC,ARNlB,AOMsB,CCAH,AHFnB,AMkHa,EE3GX,AF2GgC,GHhHhC,CGgHW,EJhHP,AIgH0C,OO1Gd,CZarB,CAAa,GYbanD,GZa1B,EAAqB,MAAM,CAAC,AYbW,kBZalB,EAArB,CAAX,CAF0B,CAG1B;AOdD,ADoBH,AJzBG,AVME,AEZH,AKME,AEAG,ARAH,AYgHA,Ac9GF,APIF,AGNA,ADDA,AGOC,APND,ACCA,AOEA,ATCA,ADQA,ChBbO,KELD,GKMG,CNAC,EYgHE,INhHR,ANAY,AYgHZ,CXtHa,EKME,ANAA,CCNC,CAAlB,KKME,CNAuB,CAAC,gBAAT,CACX,OAAO,CAAC,OADG,EAEX;ASDN,ARNA,AKME,ACmBA,AHfF,AJHU,AY+GN,AO1GN,AGNA,ADDA,AGOC,APND,ACCA,AOEA,ATCA,ADOA,EXPE,EGeE,INzBI,AGUA,CEJC,EFID,AQ4GG,ENhHP,GAAY,CCmBC,CAAC,AK6FZ,ENhHF,OCmBA,CAAwB,GNzBG,AMyB3B,CAA4B,ENzBE,CMyB9B,CNzBF,CMyBmC,QAAjC;AO/CkB,AbuBpB,AKME,AEDE,ADoBH,AHfC,AJNe,AYkHX,Ac9GU,APIlB,AGNA,ADDA,AGOC,APND,ACCA,AOEA,ATCA,ADMA,EPXM,CDNgD,CA4BpD,EN3BI,AOKI,AREF,CQFG,EFCF,CNFU,EAIX,C0BAInB,ElBHN,AIiHS,CNhHX,AEDgB,CRDD,CAAf,CMEe,ANR+C,A0BUhD,C1BCd,AY6GgB,EJjHd,AkBGe,GzBRI,AWsHA,CNhHrB,ELNmC,CWsH/B,GXtHN;AaYF,ARLI,AEDE,AJKF,AJDA,A0BDF,APIF,AGNA,ADDA,AGOC,APND,ACCA,AOEA,ATCA,ADKA,EPVM,CSvBJ,AQAA,GjBuBQ,CAAC,EFCF,EoBEA,ElBHH,CFCF,GAAa,EAAb,YoBES;AzBRX,AOMG,AJKD,ACEF,ALHE,AY4GE,Ac7GN,APIA,AGNA,ADDA,AGOC,APNC,ACCF,AOEE,ATCF,ADIA,CPxBO,CHsBL,CczCA,MlB4BO,AIaA,EOyGE,CPzGF,GJbM,CAAC,CWsHV,OXtHG,EAAP,EAA0B;AACxB,AKMA,ACoBF,AHfE,ACEA,AOyGI,Ac7GR,APIE,AGNF,ADDA,AGOC,ANLD,AFGA,ADGA,ERYE,EN1BE,KKMK,CDOC,CAAC,EJbE,AKMA,CAAC,ADOA,CEaC,AK4FA,CL5FC,CDpBC,CAAb,CDOe,CCPC,AMgHA,CNhHC,GAAG,CMgHC,CPzGX,CAAa,CEazB,CAA2B,AK4Fd,ENhHgB,CAAC,ACoB9B,AK4F8B,CL5FC,AFbnB,GAAsB,AOyGrB,CPzGX,CCPoB,CCoBe,AK4FA,CL5FC,CDpBC,CAArC,EAAwC,CAAC,AMgHA,CAAC,CNhH1C,ACoBF,EDpB+C,ACoBA,EK4FJ,CAArC,KL5FN;ANzBE,AKMG,AKhCP,AJoDE,AHfE,ACEA,ALJA,A0BAJ,AJFA,ADDA,AGOC,APNAF,ACCD,AOrDmC,ATwDnC,ECJCA,MZMO,ALJA,AiBFD,CVmBE,CN1BC,CKME,AWCF,CZME,EJbE,CIaC,CCPR,CLNU,AKMqB,ACoBpC,AFbE,CCPG,GNGc,CMHsB,CLNpB,CAAC,ADSA,CAApB,EMH4C,QLN5C,CAFwB,CAGxB,CKKuC,EAApC;AGAL,AHCG,ACoBJ,AHfG,ACEA,ALJA,AY4GE,Ac5GN,APIsB,AGNtB,ADDA,AGOC,APNC,ACCF,AFGA,ADGA,ENTE,MJQM,ALJA,GY4GG,AK9GF,EjBEI,AmBIDH,GnBJI,CAAC,AY4GX,CZ5GF,ISJkB,CAAC,AUQD,CdAE,EcAC,CdAE,GIRL,EAAuB,AJQzC,AYNU;ARDV,APSG,ADdH,AKMD,AFKC,AJFA,AY4GE,Ac5GN,APIE,AGNF,ADDA,AGOC,APND,ACCA,AOCAU,ATEA,MdGa,EDdL,ADSA,GSJG,AGgHA,AOxGF,ClBbG,CAAC,CwBSC,ChBJC,APSO,AuBLPC,Cb4GT,CZ5GW,CEKqC,CAA7B,CFLL,CAAhB,AyBAJ,CAAsB,CvBMjB,CAAC,GAAG,CDfD,EQKG,CAAa,APUnB,EDf4B,CwBSjC,EvBM4B,AuBNQ2D,EhBJzB,CAAP,MgBIJ,OxBTI,EAAkD;AQMnD,APUG,ADfA,AKOJ,ACkCK,AH9BH,ACEA,ALJA,AY4GI,Ac5GR,APIG5C,AGNH,ADDA,AGOC,APND,ACCA,AFGA,ADCA,MdZM,AMyCO,AY5BVA,EjBES,CAAC,AGFJ,CLJC,EEMM,CAAC,AGFJ,CHEK,AGFJ,CcAF,EjBES,AGFJ,AcAH,CdAV,AYNc,EVkCS,AF5BP,CHEH,AGFI,CHEf,CK0BwB,AUlCPZ,CZMC,CJbC,AIarB,EE4B8B,AF5BP,AYNC,ChBPA,AIaA,EE4BE,AF5B1B,EJbE,AMyCC,AF5ByB,AYNA,KAAKD,KAAM;AfSrC,ADfD,AUfL,AP0BI,ACEE,ALLK,AY6GH,Ac5GR,APGeZ,AGLf,ADDA,AGOC,APND,ACCA,AFGA,ADAA,EbIM,GDrBsB,CAOxB,ADOO,EmBIIA,IjBGC,AGFJ,AcDO,CjBGF,AGFJ,ALLH,CmBIWiB,CPyGN,CVtGT,AGFU,CHEK,CAAf,CUsGa,CVtGK,AUsGJ,CPxGC,GHEf,CUsGS,CAAW,EPxGV,CAAa,CAAb,CAAV,AOwGS,CPzGiB,AOyGxB,CPvGF;AI3C+B,AP6C/B,AS9BN,AP0BI,ACGE,ALPc,AYqGhB,AcnGJ,APEc,AGJd,ADDA,AGOC,APND,ACCA,AFGA,ADDA,MJzBM,AXsBc,CmBGX,EjBKI,CAAP,EFRoB,EAAE,MiBAR,KNtBK,AMsBAF,GNtBG,CAAC,EMsBT,ENtBQ,CMsBM,CNtBS,SAAf,EMsBR,GNrBhB,AMqB6C,EAAG,CNrB7C,IAAI,AMqB6C,KNrBxC,AMqB6CA,MAAO,GNrB3C,EADzB;AT+BK,AEJD,ACGE,ALRuB,A0BG7B,APEGW,AGJH,ADDA,AGOC,APND,ACCA,AFGA,ADFA,CbCO,KiBCJA,EnBL0B,EmBKtB,EAAE,UFJa,KAAKR,WAAY,WAAU,KAAKlB,IAAK,WAAU,KAAKa,IAAK,YAAW,KAAKC,KAAM;AhBPjG,AUbJ,APyBI,ACGE,ALTsB,AY+GxB,Ac3GJ,APCUd,AGHV,ADDA,AJCA,ACCA,AFGA,ADHA,GOnCE,ANEA,CLWE,IVaI,AkBWEA,GP0GC,CO1GG,EAAEiB,EP0GZ,IK7GgB,ChBRC,CAAC,GAAd,AgBQiBD,ChBRC,GUbG,CVarB,CAAJ,AgBQgB,CNrBY,CVaC,CgBQC,ENrBlC,UMqBoB,GAA6B,EAAG,KAAI,KAAKA,MAAO;AHE7D,ALLA,ARJD,AKMM,AFMR,ACGE,ALVI,AYgHP,Ac3GH,APAS,AGFP,ADDF,AJCA,ACCA,AFGE,ADJF,ETFY,IQGC,ALLA,ARJP,CkBQG,CnBH+B,KMCjB,CNDnB,CcIkB,CRHC,EQGG,KAAD,IAAmB,EbTf,CQIQ,ARJP,GQIU,CRJlC,CAA6B,EQIS,ERJtC,EAD2B,CAE3B,mBQGkC,EAAjC;AKML,ARHE,AKnBJ,APyBI,ACGE,AqBLN,APAGW,AEHH,AGKCzB,APJD,ACCA,AHFA,ESKCA,EbzBG,EQuBDyB,EKEI,CVHE,ERHE,AKnBA,AQuBH,AKEE,EVHG,AKCH,EbJK,EKnBE,CAAC,IGsBT,CAAc,GHtBnB,ELmBO,CQGkB,ARHA,CQGC,CHtBC,ELmBpB,CAAP,CQGyB,CAApB,EAA6B,IHtBtC,EAA4C,WGsBnC,CAAP;AACD,ADsBM,AXjBA,ADdD,AKMH,AKnBD,APyBE,ACGE,ALXF,AYoFuD,Ac9E3D,APDW3B,AGDVE,ADDD,AGKE,APJF,ACCA,AFGCC,ADND,CDCO,AFiFA,CDrGL,AWqBDD,ANIAC,CCbC,ACzBA,GLyDW,AXjBA,EiBLFH,AGDJ,ErBRG,CDIC,AsBID,AEID,CLHM,CHGH,CGHKiB,AHGJZ,GdEW,EWiBE,AGnBd,CdEgB,AFVR,CEUO,AcFP,CHmBU,Cb3BP,EEUqC,ES3BjC,EE4CE,AZ/BA,ADIzB,CWjB0B,CXiBC,CwBQjB,CXoBT,CZhC6B,CUbhC,GVaI,EAAkC,UYgCpC,IACK,OAAO,iBAAP,KAA6B,UAA9B,GACJ,mBAAmB,CAAC,OAAD,EAAU,iBAAV,CADf,GAEJ,qBAAqB,CAAC,OAAD,EAAU,iBAAV,CAJlB;AXhBL,ADdM,AUbP,APyBG,ACGE,ALXA,AYsHN,AchHA,APFU,AGAR,ADDF,AGKA,APJE,ACCA,AFGA,ADPF,CJpBA,MAEO,AQkBE,ClBLD,AeYFC,CdEG,ES3BE,AWqBF,CtBJG,IEUI,AFVA,AgBQF,CdEL,CS3BS,CXiBC,AgBQF,GdEK,AsBFA,CRADC,CLzBG,CAAC,AXiBA,CAAC,CCJC,AuBYA6D,GvBZG,ECcrB,AoBNK,AEIQ,CbzBJ,CVaV,AUb0B,AXiBf,AgBQF,CAAgB,CdEG,AFV9B,AwBQ8B,MAAd,GAAuB,CtBEC,CAAC,EcF9B,CdEmB,AcFlC,CdEiD,AsBF7B,CtBEc,AS3BzB,CT2BT,CsBFoD,GbzBG,GayBI,QbzBtD,EAA+D;AT4BrE,ADdM,AKMK,AKnBV,APyBE,ACGE,AqBLN,APFGxC,AGAH,ADDA,AGKA,ARAE,ADRF,CbQO,CINK,AKnBV,IQqBCA,GRrBM,AKyBFpB,CLzBG,CLmBW,GAAA,AKnBnB,CACI,GQoBS,EAAE,EHIf,CAAmBF,QAAnB,0BLxBI,GACA,qEADA,GAEA,gCAHJ;AVcG,AKMD,AKhBF,APsBE,ACGE,ALZA,A0BON,APHkBN,AGClB,ADDA,AGKA,APJCkB,ACCAK,AFGC,ADTF,EJbE,AMkBDL,ACCAK,GjBvB2B,CAexB,AqBOE,EHDYvB,EbDR,ANHA,CsBKCwD,CHDW,CFCV,CjBLE,AmBIUvC,AFCXZ,ACCA,CAACA,EZHG,ENHE,AiBKP,CXFQ,AYGP,CDDO,CCCC,ClBNf,EMGmB,ANHA,AsBKnB,EXlBqB,CWkBC6C,EXlBE,CWkBxB,ChBFF,AgBE6BO,GXlB/B,CWkB8B,IAAU,qBAAK,kCAAiCA,IAAI,CAAC,CAAD,CAAI,6BAA4BA,IAAI,CAAC,CAAD,CAAJ,CAAQJ,OAAR,CAAgB,CAAhB,CAAmB,YAAjI,CAA8I;ARApJ,AD0BA,AP3BI,AKhBH,APsBG,ACGE,ALZE,A0BOR,APJiB,AGEjB,ADDA,AGKA,APJE,ACCA,MJFI,AD0BA,CM/BG,CFMH/C,ACCAA,EZHI,CAAC,GAAG,EWEA,ACCA,GDDG,ACCA,EZHI,CO2BC,AP3BA,CQCC,AGCFC,ACCAA,ELyBjB,CC3BuB,AD2BtB,EP5BS,GQCY,ARDK,CAA3B,CO4BA,CI1Ba,ACCA,CJFqC,AD2BnB,AI1BF,ACCA,OLyB7B,AI1Ba,ACCA,EDDyB,ACCA,GLyBkB;AC1B1D,AD2BI,AP5BF,AKfJ,APqBI,ACGE,ALZE,A0BOR,APJGsB,AGEH,ADDA,AGKA,APJGV,ACCAA,AFpE6B,AD6DhC,GOEE,GRGI,AKDHU,AFEAV,ACCAA,IZHO,CQCC,CGCF,ACCA,EDDE,ACCA,CZHI,GAAG,IaAC,CLCI,ARDA,CaAF,IbAjB,CAHiB,CAKjB,EQDF,EAAgC;AAC9B,AD2BE,AZnCF,AKSA,AFIA,ACGE,ALZE,A0BOR,APLsBnB,AGGpB,ADDF,AGKA,APJIa,ACCAA,QjBVI,AkBMcb,AFGlBa,ACCAA,GJFO,CKFe,AFGlB,ACCA,ECJoBI,AFGlBZ,ACCAA,EJFM,CAAC,EGCF,ACCA,CDDCe,ACCAA,IJFZ,EGCM,ACCA,CjBViB,AgBSJP,ACCAA,IDFZ,ACCA,CjBTqB,IAA5B,EAAkC;AaSnC,AD2BG,AZnCA,AKSF,AFIA,ACGE,ALZE,A0BOR,APNqB,AEGrB,AGKA,APJIC,ACCAA,AFEJL,ADVA,GDIE,GbNI,EgBSFK,ACCAA,CJFK,IAAI,AGCJ,ACCA,CFEK,CCHHT,ACCAA,AFEIK,EfZE,GaQG,AGCJ,ACCA,CDDCU,ACCAA,AFEjB,CAAsB,GFJT,EGCF,ACCA,CDDaN,ACCAA,EJFM,CEI9B,EAAiCnB,KFJxB,CEIT,CFJwC;AACpC,AD2BE,AZnCD,AKSD,AFIA,ACGE,ALZE,AYoHD,Ac7GP,APZS,AGSR+D,ADAD,AGKA,APPW,ACCA,EICVA,GHTC,CNoCQ,ADqFG,EZpHL,GcIG,CQAA,CT2BM,CAAC,Ab/BJ,AYoHO,CZpHN,AsBID,CRAV,CFgHgC,CCrF1B,ADqF2B,KCrFV,ADqFS,EAAiB,CZpH7C,EYoH4B,CZpHP,Ea+BnB,EDqFoE,CZpH5C,Ca+BK,Ab/BJ,GAAN,EAArB,Ea+BsC,CAAC,UAArC,IACA,EAAE,WAAW,OAAO,CAAC,UAArB,CADJ,EACsC;AC3BzC,AD4BK,AP3BJ,AFIA,ACGE,ALZE,AYoHN,Ac7GF,APNE,AGGA,ADAF,AGKA,APT0C,ACCA,AHJ1C,GDKS,EGFQ,ACCA,CDDf,ACCA,EIGIC,CRAG,ED4BD,MAAA,AS5BO,CT4BP,ES5BU,IT4BV,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,OADL,CAAA,EACY,ES7BgB,KAAKlC,SAAvB,EAAkC,KAAKC,IAAvC,EAA6C,KAAKC,KAAlD,EAAyD,KAAKC,YAA9D,EAA4E,KAAKC,gBAAjF,CAAhB;ARCE,AD6BM,AZtCN,AKUA,AFIA,ACGE,ALZC,AYoHL,Ac7GF,AJHE,ADAF,AGKA,APJE,ACCA,AHVF,MFqCU,GDmFD,AK/GFrB,ACCAA,CJFG,CbTC,AqBSFmD,CVgHG,EEhHE,AD6BI,CAAC,AZtCJ,EWyHE,EEhHP,CACF,AD4BU,AZtCE,AqBSlB,ET6B8C,ADmFvC,AK/GP,ACCA,CDDmBrD,ACCAA,IN8GM,EXzHhB,CWyHmB,CK/G5B,ACCA,EjBX+B,EWyHE,EXzHE,CAAC,AWyHX,IAAe,CXzHT,IWyHc,CXzHC,IWyHI,KXzHhD,AWyHK,CAAP,CXzHyD,4BaW/C,KAAK;AD4BL,AZtCN,AKUF,AKnBG,APuBH,AQ2GH,Ac7GD,APNkB,AGGhB,ADAF,AGKA,APJE,ACCA,AHXF,CHsHO,ESjJL,AG8BA,GbZW,EE+CD,KAAK,AMhCLF,CNgCM,KMhCA,GAAG,IRfY,EE+CrB,CAAqB,AF/CI,OE+CG,CAAC,CF/CL,EE+CxB,EAAkC,AF9CzC,KGgBK,CAAN,AHhBA,CE8CQ,GF9CmB;AGoB5B,AD2BQ,AZtCL,AKUF,AKlBE,APsBF,ACEE,ALZA,A0BQN,APNE,AEGA,AGKA,ATfF,GWZE,G1BiBI,EWZM,GXYD,AmBEF,CdUG,IMxBQ,GAAG,INwBA,GAAG,CAAC,CAAC,GcVf,ORd6B,CAAC,ANwBjB,CAAc,KMxBS,CAAC,ANwBxB,CAApB,CAnB0B,CAoB1B,CMzBoC,EAAc,SAAd,CAApC;AGoBL,AbXK,AKUF,AFIA,ACGE,AqBLJ,APNF,AGECwD,ALxEkC,ACDQ,AH+D3C,CDEA,CQQCA,IrBRK,IAAI,CAAC,KAAL,EqBQW,CrBRE,EqBQC,iBrBRkB,KAAK,IAAxB,GAA+B,CAAC,CAAhC,GAAoC,IAAI,CAAC,KAAL,GAAa,WAA9D,CAHqD,CAIrD;AaYN,ADqBoB,APvBhB,AKnBE,APuBF,ACGE,ALbA,AYoHN,AOlHA,AGEE,ADCDX,AG3EoC,AT+DrC,EMYCA,GRuBO,CAAA,AFzCE,ACiIJ,EUhHAS,EtBJI,IAAI,CAAC,CqBKA,ECDC,CXjBO,AUkBL,ECDC,CXjBO,CXahB,GsBIcA,EtBJI,IYoHI,GAAwB,CUhHrC,EAAjB,gBXjBuC,GAAf,CAAmB,QAAnB,CAApB;AE+CC,AZrCD,AKUF,AFIA,AJX0B,AYqH5B,Ac5GoB,APNtB,AGEE,ADCA,AJDFjD,ACGAA,AHfA,EH4HE,CC3FI,GZ7BA,EqBQAoD,ADCAhB,CR4BO,EDmFF,EAAE,Ac5GD9C,CTJE,ACGA,CjBXC,AgBQAW,ACGAA,CIHD,ADCA,CT8G0C,CXvHtC,CqBQDgD,ADCA,EJDjB,ACGA,CDHsB,ACGA,CQCA,GAAG,GJJE,CAACA,ILA5B,EAAoC/C,IKAE,CAACmD,CJGvC,EAA4CzC,CDH5C,EKA4B,CrBRoB,CAAC,CqBQH,CAAnB,CAAzB,ErBR8C,CoBSZ,CpBToB,IoBSfI,CHEzC,IjBXgD,CAA1C,GoBSW,EAAmC,KAAKC,IAAxC,EAA8C,KAAKC,KAAnD,EAA0D,KAAKC,YAA/D,EAA6E,KAAKC,gBAAlF,EAAoGwB,OAApG,CAA4G,CAA5G,CAAf;AR6BM,AZrCF,AKUF,AKpBE,APwBF,ACEE,ALdA,AYsHJ,Ac5GA,APNF,AGEE,ADCA,AGIF5C,ATlBA,EH6HE,IXxHI,AUVI,AN0BJ,AOwGA,EZtHiD,AYsH/C,AUhHFsD,ErBRI,CyBYD,ALHAlB,EpBTI,CWsH2C,AU9G5C,AEKE,CAACnC,EFLAgD,CrBRG,CAAC,AUVI,AUmBrB,EGIF,CnBGsB,AmBHA,EbvBM,CN0BH,CAAC,CiBRD,CrBRP,AqBQQR,CrBRpB,EqBQS,CAAgBC,CXlBzB,EAAiC,CWkBJ,AEKnC,CnBGqC,CmBHCgB,EnBGE,AiBRD,CjBQE,CAAf,IAAoB,GmBH9C,anBGyB,KACf,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,WAAW,GAAG,CAA/B,MAAsC,CAAC,CAD3C,CAvB0B,CAyB1B;AQoBE,AZrCH,AKUD,AKpBI,APwBJ,ACIE,ALhBE,AYsHN,Ac5GC1C,APNH,AGEG,ADCD,ANfF,EH8HE,EDlIM,EesBLA,Kd4GQ,EAAE,AUhHD0B,CtBNC,C0BUD,EftBS,AesBP,AJJE,CtBNa,CAAC,CWZN,AWkBL,GAAR,GAAeU,GV6G8B,GZnH3C,EAAL,AsBML,EtBN4C;AaoCvC,AZrCL,AUVO,APwBN,ACIE,ALhBI,AYsHR,Ac7Ga7D,APLf,AGEG,APfH,EH+HE,GUlHa,CXhBL,AWgBR,EIKaA,Cd6GN,EAAE,Cc7GQ,EAAEC,EdyGmC,ED9HlC,AXYN,EWZQ,IAAI,IXYF,GWZF,AXYM,EWbN,EXasB,CAAC,UAArC;AaoCF,AP5BJ,AKnBM,APwBN,AJZM,AYsHR,Ac9GY,APJd,AGEE,ADCD+C,ANjBD,EHgIE,AS/GDA,IVnBS,CemBD,CpBAD,CAAC,EO4BM,AS7BNe,CVgHG,CS/GA,CfAE,AM+GA,CN/GN,AKnBW,CUmBJ,CVnBM,AWkBnB,CtBNc,CMOG,EKnBM,GAAJ,ELmBK,CAAC,CAAD,CAAP,KAAe,EAA1B,IAAgC,OAAO,CAAC,CAAD,CAAP,KAAe,EAAnD,EAAuD;AO6BjD,AZtCR,AKUI,AKtBkB,AP2BpB,ACGE,ALhBW,AYiHuC,AcxGrDrC,APJH,AGEE,ADCA,CTyGF,CXnHE,GUZM,CEkDE,Aa3BPA,ELDG4B,ER4BQ,Aa3BP,Eb2BS,AP5BJ,ADQA,AqBPH,CpBDI,AeAF,CrBRM,EMQD,AeAF,GR2BC,EP3BM,CAAC,CAAD,CAAL,CLVS,AKUA,CLVC,AIkBA,GAAG,CCRvB,GLVJ,CAAiC,CAAD,IAAO,CAAC,CAAC,QoBUb,EpBVW,CAAc,EoBUpB7B,QhBQiB,CJlBX,AoBU3B,CpBVqD,CAA1B,AoBUK,CpBV5C,AIkB2B,CAA4B,CAA5B,CAAvB,CgBR6CC,IAArC,EAA2C,KAAKC,KAAhD,EAAuD,KAAKC,YAA5D,EAA0E,KAAKC,gBAA/E,EAAiGwB,OAAjG,CAAyG,CAAzG,CAAZ;AR6BQ,AZtCT,AGeG,AJdY,AYyHhB,AchHUrD,APHV,AEGE,ANpFF,MFgHU,ADoFJ,EchHIA,Cb4BG,EAAE,AQ5BNsD,CKAK,EAAErD,E1BTW,AqBSzB,CR4BmB,EAFN,IDsFQ,GZzHb,AYyHgB,CZ3HqB,AY2H/C,CZxHU;AcUH,AD2BG,AP7BJ,AKnBE,APyBJ,ACEE,ALfI,AYwHV,AcjHS,APFT,AGCCuD,ADEC,ECFDA,IRGY,AD2BH,ADoFJ,CcnHG,EZIO,CRFN,ADQA,ESLN,CAAC,ED0Bc,CS9BJ,CT8BM,AP7BJ,CAAP,CgBDQ,CRId,EAAgC,ADuBrB,CP1BQ,CDQC,CSLe,GF8GX,CPzGC,ESLzB,ARHE,AMiHyB,ENjHE,ADQ3B,EAA6B,CSLoC,AHtBhD,ACoIa,CAApC,EDpIQ,CAAmB,QAAnB,EAA6B,aAA7B;AGuBF,AD0BI,AZtCV,AKSQ,AKnBD,AP0BH,ACCI,ALfE,AYwHV,AcjHG7B,APFH,AGCE,MT8BQ,AZtCJ,AW0HA,AcjHHA,EZGS,AQJNwB,ElBQI,CsBPF,CJDE,CICA,EZGS,ARHJ,AgBDF,CT8BO,AZtCJ,EaYM,AD0BA,ATtBJ,CHhBE,CYkCL,AS1BGO,ChBCG,AFOA,CEPC,CLTH,AKSE,CQGO,ARHpB,CQGqB,EbZK,GqBQrB,CRIS,CACZ,AQLR,CRKS,GAAD,EAAM,AF6GsB,CE7G5B,EAAS,AVIX,AQyGiC,GE7G/B,EVIG,AQyGiC,CAA9C,EE7G2B,GAAG,EVItB,CUJyB,AVIX,OAAd,CAAsB,OAAtB,CAA8B,CUJY,CAAC,CAAD,CAAvB,GAA6B,EVIhD,CAAwC,IUJe,AVIvD,CUJwD,AVG3C,GUH8C,AVK3D,GUL8D,CAAP,CADzC,EAEZ,CVIM,CAAC,KUJA,CAAC,CAAD,CAFK,CAAhB,CVME,CAAoB,KAAK,QAAL,CAAc,OAAd,CAAsB,OAA1C,EAAmD,IAAnD,CAFJ;AUDE,AbdJ,AKSK,AFUH,ACFI,ALfE,AYwHV,AclHW1D,APDX,AGCE,ADjFyC,MpByErC,AW0HA,EclHKA,AJALgE,CRMO,CVKH,CHnBC,CyBQI,CZME,AQNN,CrBRI,AyBQE/D,CtBWF,CkBXD,ErBRK,AGmBO,CHnBN,CGmBhB,CkBXe2D,CRMN,CAAc,IbdZ,GacF,EAAuB,AbdH,KW0HI,AUlHvB,EAAZ,CVkHsC,KAAK,CAA7C,GE5Ga,CAAP;AACD,ADuBK,AZtC0B,AUT9B,AP6BF,ACFI,ALfE,AY4HV,AcvHU,APAV,AGCE,CRAK,KHlBG,CecD,GtBeC,CkBXDT,GXlBS,CP6BH,AkBXF,CAACD,CXlBO,CP6BH,CkBXT,CAAS,CAACe,ElBWI,CkBXL,EAAMrB,CAAN,GXlBgB,CAAC,AP6BjB,CAAc,AkBXF,KlBW1B,CA5CI,CA6CJ,IO9BiB,CAA2B,GAA3B,CAA+B,MAAM,CAAC,OAAtC,CAAf;AEgDI,AZvCI,AKUR,ADSE,AqBVLhB,APAH,AGCG,ADCHnB,IpBXyE,CAA3D,CyBSXmB,EzBT0E,CAA3E,CKUQ,GgBAA,CAACqC,ADCG,CAACvD,EfDE,AgBAP,ChBAA,AoBDK,CJCCsD,CIDC,CLEjB,CAAsB,CfDC,CgBAF,CAACpB,CAAD,CAAX,CAAP,GhBAO,IAAyB,CAAC,MeCpC,EAA4CG,EfDE,CAAC,CAAD,CAAxC,EAA6C,UeCnD;AR6BU,AZvCR,AKUM,AKnBF,AP8BF,ACFI,ALhBE,A0BKQ/C,APClB,AGCG,KAFM,CXjBC,AWiBR,ErBRM,AyBQUA,EtBaR,EsBbY,EzBRR,AUTI,AeiBMC,CpBET,CAAP,AFWQ,AJlBF,CCHG,EUTM,AP8BJ,EJlBA,GAAG,CCHG,ADGf,CCHgB,CGqBC,CO9BrB,AP8BsB,EO9BM,YVSjB,CAA0B,CGqBxB,CACX,EHtBS,EAAgC,IGqB9B,EAEX,UHvBS,EAAkD,IAAlD,EAAwD,KAAxD,CAAf;AYwCQ,AP7BH,AKnBC,AP+BI,ACHJ,AqBZS,APEjB,AGCE,OIPO,CrBgBD,GM5BO,CN4BH,IAAI,CAAC,EM5BT,EN4Ba,gBAAgB,GAAG,aAAH,GAAmB,oBAAvC,CAAT;AQqBE,AZxCR,AKWG,AKnBE,AP4BY,ACAZ,ALjBG,A0BKP4B,APEH,MfaQ,AsBfLA,CrBKG,EJbG,CGoBU,EAIX,CCJK,EJpBE,CAAC,CGoBG,AJjBJ,CIiBX,GJjBe,CAAC,A0BKD,EzBRV,AyBQY,C1BLE,CCHrB,ADGQ,ECHkB,ADGF,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AasCjC,AZxCN,AGwBA,ACJI,ALjBI,A0BIU7B,APGtB,AGrFyC,IrB2ErC,IGwBI,AsBjBcA,CzBPb,GyBOiB,EAAEC,GtBiBX,CJrBD,EIqBI,CAAhB,KJrBoB,CAAC,UAAU,CAAC,CAAD,CAAV,CAAc,IAAf,EAAqB,oBAArB,CAAZ,EAAwD;AasC1D,AZxCP,AKUC,AKlBE,APgCF,ACJI,ALjBM,A0BGO,APIrB,OOTS,CpBSD,AKlBI,APgCJ,GOhCO,CLkBH,EKlBM,CLkBH,CNPD,CMOV,AFca,GOhCO,APgCJ,COhCK,APgCrB,AJrBe,OWXD,CAAe,IAAf,CAAoB,gBAApB,CAAZ;AEiDI,AFhDJ,APgCF,ACJI,ALjBK,AY6Hb,Ac1HGwE,APIH,AGAAhE,EXlBM,ICwIA,Ac1HHgE,EtBkBK,EOhCM,AecP,EtBkBH,AsBlBK,CfdQ,CWkBH,CVsHC,AUtHA/D,GVsHG,GUtHlB,CAAsB,IXlBQ,CAAC,ECwI/B,ODxIiB,CAAwB,GAAxB,AWkBjB,CXlB6C,CWkBH6C,EXlBzB,CAAX,YWkBN;AT+BU,AZzCR,AKWE,AFcA,ACJI,ALjBG,AY8HX,Ac5HUvD,APKV,QfcQ,ACJA,AqBfEA,CzBND,AKWA,GFcG,ACJA,AqBfE,CpBKD,CLXX,AKWY,AoBLE4E,CtBmBD,CCJC,CCVC,ADUA,CCVb,ADUc,ECVE,CAAC,AFcA,CAAC,EEdE,ADUR,CCVZ,ADUqB,CAAT,CCVW,CAAC,ADUA,ECVxB,AFcW,EEdiB,AFc5B,CAtDI,CAuDJ,QCLsC,CAAC,KAA3B,IAAoC,cAAc,CAAC,CAAD,CAAlD,GACJ,cAAc,CAAC,CAAD,CADV,GACgB,8BADhB,GACuC,cAAc,CAAC,CAAD,CADrD,GAEJ,gBAFJ;AQqBE,AZzCT,AKWK,AKnBA,AN+BC,AqBlBE,APMT,ClBlBA,KYgDU,AP9BJ,AKnBI,CeOD,GpBYC,IAAI,AKnBI,GEiDG,EFjDE,CEiDF,CP9BA,CAAC,CAAD,CAAf,IKnBA,EAA4B;AEkDtB,AP9BN,AKnBE,APiCJ,ACFC,ALpBK,A0BEPF,APMH,AJjFA,MW2EGA,IfbW,CPiCH,CSgBK,AP9BJ,GoBNA,CpBMI,CKnBK,AeaP,EboCS,AP9BJ,ANRF,CWXO,APiCJ,GAAG,CEdC,ANRF,CMQG,CO8BK,AP9BN,AKnBM,CEiDC,AP9BzB,AKnByB,CPiCH,CAAC,AJtBF,CAAjB,EAAoB,GIsB1B,EAAiC,CSgBrB,KAA+B,EFjDvB,EAAhB,MEiDI,EAA+C;AAC7C,AZzCd,AGyBM,AJtBM,A0BCG1E,APOf,MlBXM,AGyBA,EsBrBSA,EtBqBL,EsBrBS,CtBqBN,CsBrBQC,CbqCF,GThBD,CAAC,GSgBO,CAAC,GAAb,EThBI,CAAZ,CSgBsC,MZzCR,CYyCe,CAAC,CZxChD,CAAC,KAAD,EAAwB,EYwCgB,CAAoB,IAApB,CAAyB,EZxC/B,EYwCM,CAA9B,AZxC2B,CAAC,CAAtC,KAA2C;AYyClC,AZxCP,AKSA,AKnBE,AN+BJ,ALnBQ,A0BAE,APQd,IdWI,GJrBO,CUVC,AN+BJ,ECZE,CLTK,CAAC,AIqBJ,ECZE,CLTK,EIqBF,ECZE,KDYP,CJrBiB,AIqBJ,CAAb,CAAR,CJrB4B,AKS1B,CLTA,CKSwB,CLTK,CAAC,CUV5B,EVU+B,AUVA,KVUK,CAAC,MAAvC,EAA+C,CAAC,EAAhD,EAAoD;AYyC/C,AZxCH,AKSA,AKnBE,APiCJ,ACFF,ALnBQ,A0BRH,APgBT,KOhBE,CfJQ,CEgCK,GZtBD,AGuBJ,CAAC,ACFA,CM/BK,CAAC,CVUC,AKSJ,CAAC,ADYX,EJrBiB,CKSH,ENPA,CWZR,CVUgB,AKSJ,AKnBK,CVUA,AKSJ,CLTG,CAAlB,GKSA,KNPuB,GAAG,IWZxB,CAAoC,EXYL,CAAC,GIqBV,COjCtB,EAA6C,CPiC5C,CAAL,CJrBmC,CIqBF,AJrB3B,CAHkB,CAIlB,GWbF;AACD,APiCD,ACFL,AqBnBD,APQF,afaa,OAAL,CAAa,IAAb,CAAkB,SAAlB;ASiBE,AZxCF,AKSA,ANNI,AY8HN,AOtHN,GA5BE,GNyDQ,ADyFY,EXjIV,IKSA,EO+BM,CAAC,KAAD,AbrCA,CY8HZ,CCzF0C,CP/BzB,CAAC,ANNF,CMMC,CAAX,CNNa,GMMK,AMwHgB,CNxHf,UAAU,AMwHnC,CNxHoC,AMwHe,CNxHhB,CLTR,AKSzB,EAAsC,ELTlC,CAAJ,ADGuC,CAAC,CCHR,GDGf,CAA4B,aAA5B,EAA4C,CAA5C,CAAb,CALkB,CAMlB;AaqCA,AZxCF,AKSA,AKnBF,APiCA,ACDN,ALlBU,AYmaV,AcraD0E,APSC,EdWA,AOiZA,AcraDA,EfZO,IEkDI,ATjBJ,EEdE,EKnBM,CEkDC,AZxCA,AWuaf,CC/XgB,AZxCR,AKSI,CKnBK,CCibjB,CRhZe,CEdC,AoBPD,CfZM,AeYLtE,CrBoBE,GAAA,CqBpBH,CpBOQ,CAAP,AoBPO,EbsCb,CAAqB,EP/BF,KO+BS,CAAC,AFlDtB,CAAa,CLmBd,CO+BN,EAAkC,AP/BJ,CAAxB,CKnBC,ELmB2B,AKnBN,GEkD5B,GP/BwC,CAAC,AKnBlC,CLmBiC,AKnB5C,CLmBE;AOgCC,AZxCF,AKSA,AKnBD,APiCA,ACDJ,ALlBQ,AYmaR,AcraF,IfZM,KLiBA,AoBLDqE,CrBoBG,KCbK,EKnBM,CAAC,ANgCJ,AqBpBhB,GrBoBmB,AqBpBF,KAAKA,CfZhB,CAAwB,CNgCH,CAAC,CMhCtB,CAA4B,GAA5B,AeYW,EfZsB,CeYL,KrBoBf,AqBpBF,CrBoByB,CMhCpC,CeYoC,IAA1C,IrBoBmB,CAAjB;AJrBG,AKSG,AKnBH,APiCA,ACDH,ALlBQ,AYmaR,AcraFG,APSDtD,EAAAA,EOTCsD,GtBemC,CAQ/B,ACHE,COiZC,IPjZI,CqBpBD,APSC,CbFE,AoBPF,APSCxE,CdWE,GOiZZ,CO5ZS,CbFQ,ADaA,AqBpBF,CpBOT,AaEW,IbFK,CAAhB,CDaM,CCba,CDazB;AQJW,APRH,AFgBN,AJrBM,AYmaT,ActaiB,APUlB,KNMM,GMNFC,GOVmBoE,CpBQb,IAAI,AaEF,GAAG,CbFG,AoBRA,GAAiB,APUhBnE,IbFM,CAAP,AoBRA,KpBQa,CaEhB,CAAgB,MbFb,CaEH,EbF2B,AaEF,CbFtB,GAA4B,MAAM,CAAC,CAAD,CAA1C;AO+BL,AZxCD,AKUK,AKpBL,APoCA,ACJF,AOsIF,Ac3JyC,APWxCY,ERtBG,GeWM,CPWTA,COX0C,CrBqBrC,CJtBK,CAAC,CAAR,AyBCM,CAAV,APWO,EdUK,AcVH,CRtBQ,CAAC,GNgCD,SMhCb,ANgCF,CMhC6B,CNgCH,EMhCxB,CAA+B,MAAM,CAAC,OAAtC,EAA+C,QAA/C;AEmDD,AZxCA,AKUI,AKpBH,ANgCA,ALlBM,A0BHV,APWEN,CNbJ,AZRA,OkBqBIA,CRtBS,GQsBL,EAAER,GRtBJ,EQsBS,CnBRG,AmBQFc,MAAN,CAAaN,IADZ,QnBP0B,GACrB,IAAI,CAAC,WAAL,KAAqB,oBADzB;ACFZ,AKSO,AKpBF,ANgCC,ALjBM,AmBORC,CRnDG,OQmDHA,KAAK,EAAET,KnBPO,AmBOF,CAACc,MAAN,CAAaL,MnBPQ,GACf,IAAgB,CAAC,YAAjB,CAA8B,mBAA9B,CADL;AaoCZ,AP9BK,AFcC,ACFA,ALhBO,A0BNZX,APSU,EOTVA,IbwCK,OThBO,AsBxBD,C1BMC,A0BNAE,I1BMgB,CAAC,A0BNlB,CbwCQ,CaxCA,CtBwBE,CSiBlB,CAAC,CTjBoB,IAAI,CAAC,CSiB1B,EAA+B,CbnCtB,CIkBP,AJlBwC,EIkBT,CSiBjC,EAA8C,IAA9C,KAAmE,KbnC1D;AaoCN,ATjBC,ACFF,ALhBM,A0BNV,APOwC,ENkCnC,GMlCU,CAAf,CNkCU,CAAC,ATjBL,CsBxBDoE,IAAL,GAAY,CtBwBG,ESiBV,CACI,AbpCO,C0BNCA,IAAL,E1BMW,C0BNC,E1BME,G0BNd,CbyCP,CACmB,Ca1CQ,GbyC3B,CazCL,Cb0C8B,GbpCU,CAAC,GamCpC,EbnCqB,CAAqB,WAArB,CAAhB;AaqCP,APhCD,AKrBJ,ANiCM,ALhBM,A0BNV,APYA,CN0BF,GP5BI,EKrBE,ANiCA,ECZE,CaEDjE,EdUI,CCZC,EDYE,KCZK,ANJF,CMIG,AKrBA,ANiCA,CCZD,ADYE,CCZjB,AaEF,CRvBqB,AQuBFF,CRvBG,AXiBZ,CAAW,IAAX,CWjBW,AXiBK,CKgBd,AcVZ,CRvB8B,ANiCA,KMjCT,ANiCT,CMjCd,ANiCM;AQsBN,APjCI,AKpBJ,APiCQ,ACDH,ALjBwB,AYqJE,AO9I7B,SAAKD,EbFI,CFaC,CQmIC,CO9ID,CbFR,AaESc,CfWI,AJlBY,CIkBX,GJlBe,CmBO1B,CnBP4B,AmBOfN,GfWR,CeXV,IfW6B,AeXHR,CP8IG,EZrJH,CYqJG,CO9IE,CAACc,IfW1B,EAAmC,AeXf,CAAaL,KAAvC;AbDC,AFaO,AJnBsC,AYsJ5C,Ac1JHI,APYC,EOZDA,QtBuBS,GsBvBE,CAACb,CtBuBE,CAAC,AJnBgC,G0BJpC,CtBuBF,CAAW,AJnBO,A0BJR,ItBuBV;AACA,ACFN,ALlBmD,AYuJnD,Ac1JFmC,IrBqBE,AqBrBFA,Kd0JO,CRnIC,CsBvBD,CrBqBG,AqBrBFC,CrBqBG,EqBrBX,CtBuBc,AJpBuC,A0BHzCpC,CtBuBG,AQmIb,GZvJwB,C0BHT,CrBqBf,AqBrBgBc,GrBqBK,GDEf,AsBvBR,ErBqBE,CDE4B,IAA4B,CAAC,OAAnD;AHvBJ,AKWJ,AFaO,ACFL,ALnByD,AYwJzD,Ac1JF,APjGsC,Eb2GtC,MAAM,CLXQ,AyBCTd,Cd0JG,CNhJF,ADWG,GqBrBC,CAACc,C1BEgD,GKmBzD,COqIgB,Cc1Jb,CAAaN,C1BEgD,AYwJnC,EZxJqC,AYwJlE,CAH2B,AcvJ7B,Cd2JE,Gc3JwBR,CzBDtB,CACF,GyBA6B,CAACc,IzBD5B,EACkB,AyBAI,CAAaL,GzBDnC,EAC8B,AyBAlC,OzBAkC,GAAqB,IADnD,EACuD;AAC3D,AKUE,AKrBJ,ANgCG,ALpByB,AY0JxB,Ac3JF,MfXI,EVWE,AKUA,KAAK,ENTD,GMSR,EAAgB,cKrBc,GAAI,SAAD,IAAsB;AVWlD,AKWH,AKrBJ,APiCM,AJrBI,AmBUZL,ERtBE,EVUO,OAAO,AKWL,CFYC,CHvBM,AGuBL,CJrBD,AmBUE,CAACC,CbDT,AKrBU,CAAC,APiCA,EEZE,CFYC,CeXpB,CAAsB,CnBVD,CMSf,AKrBJ,CAAwB,CPiCA,CAAC,AJrBF,EWZA,IAAS,CXYF,CIqBZ,AJrBa,EIqBrB,EeXZ,EnBVyB,AmBUgBc,EfWE,CJrBD,CAA9B,EIqBJ,EAAyC,MeXjD;AlBZmB,AKYb,AKrBF,APiCM,ACvFiB,ALkEhB,AYyJP,AcxPkC,MzB4FnB,GW4JV,CDrKC,CLqBC,OAAL,CAAa,AKrBA,GAAG,GCqKlB,CAAuB,KNhJrB,CAA0B,CMgJ5B,CAA+B,CAAC,CAAD,CNhJE,CMgJE,CAAJ,ENhJ7B,EAAqC,CMgJC,INhJI,MKrBX,GLqBM,AKrBrB,CAAmB,CLqBnC,kBKrBsD,CAAC,IAAD,EAAO,SAAP,CAAtC,CAAlB;AVSc,AKab,AFYK,ACDV,ALpBS,AYyJH,KX7JE,OW6JI,IAAI,GAAG,KAAK,yBAAL,CAA+B,CAA/B,EAAkC,CAAlC,CAAb;AX7JuB,AKc1B,AKtBC,APkCM,AsBxBVf,IzBF6B,IURrB,MeUM,CAACC,EfVE,IeUjB,CfVsB,AeUA,SfVlB,EAA6B,IeUjC,EAAuC8D,YAAvC;AzBFQ,AUPF,APkCI,AJtBF,AYyJF,MX9JgC,AUPhC,ICqKI,IX9JR,ADKW,AYyJC,CX/J+C,AUN9C,CVQb,AURc,EXYa,CAAC,AYyJX,MDrKb,CAAoB,AXYb,EYyJP,EAAwB,CZzJY,EWZpC,CAA6B,OXY3B,CWZ0B,CXYoB,GWZP;AVS7C,AKjE6B,AKyDvB,APkCE,AJtBA,AYyJF,URnIE,EJtBA,CYyJG,CDrKC,EPkCE,CAAC,AJtBF,CAAC,IAAN,CAAW,IAAX,CIsBA,GAAqB,KAAK,AQmI5B,CRnI6B,AQmIA,GRnIN,AQmIvB,CAAiC,CRnI/B,GQmIF,EAAuC,CAAvC;AN9IR,AKvBe,APmCL,AJtBA,UWbK,APmCL,EJtBA,EIsBI,GOnCQ,APmCL,CJtBD,CWbQ,AXaP,IIsBM,CAAC,MJtBd,EIsBO,CJtBe,CIsBtB,GJtBkD,CAAC,OAAnD;ACJR,AUTuB,APoChB,AJtBA,AYwJD,MX7JF,EW6JE,IDtKiB,CVSZ,KAAK,AW6JA,CAAC,GX7Jb,CW6JE,CAAgB,EX7JE,EW6JlB,KX7JyB,KAAK,SAApC,EAA+C;AAC7C,AUVoB,APqCjB,AJtBA,AYwJA,IX7JH,GGEiC,CA2B/B,CJhEA,ECmCK,CAAC,GDKC,IAAI,ICLb,ADKiB,CCLG,ADKF,ICLlB,IDKa,KAAkB;ACJ/B,AUXU,AXeuB,AYyJhC,KAND,ODlKiC,QAA7B,CADuC,CAEvC;AVWL,ADGU,QAA8C;AWbnD,APsCF,AJxBE,AYyJJ,URjIM,CQiIC,GDvKG,APsCA,CAAC,CJxBD,GIwBJ,COtCU,AXcF,CYyJd,EDvKmB,AXcD,CIwBE,GOtCG,AXcQ,CAAC,EWdb,APsCjB,EOtCE,APsCwB,AJxBxB;ACHN,AUVM,APsCA,AQiIL,QX7JK,AUVA,KAAK,CVUC,AUVA,APsCA,GH3BR,CUXE,APsCU,COtCC,EPsCE,IH3BP,CAAC,AUXW,APsCA,COtCC,QPsCN,CAAe,MH3B9B,CAA0B,AUXb,CAAyB,MVWtC,CUXa,CVWsB,AUXjC,EAA8C,EPsCjC,CAAoC,IOtCjD,CAAuD,APsCD,COtCA,IAAe,CVWvE,CG2Be,CH3BsC,AG2BnD,IH3BF,EAA2D,KAA3D,CADJ;AAEA,AKWI,AKtBI,APsCF,ACLF,ALpBE,AY2JN,MX7JI,AKWO,ADWA,EDKL,EOtCE,EPsCE,CAAC,CJzBD,CCFG,CUXC,CAAC,CVWC,ADEF,CMSV,ANTW,CMSS,AKtBhB,CAAW,CAAX,CNiCJ,GLpBM,CAAa,CIyBjB,CAAqB,GCLU,CDKL,AJzBtB,CIyBuB,IJzBC,CAA5B,EAA+B,KKoBjC,CAA+C,CJtBL,CAAC,AG2BzC,KH3BwC,CAA9C;AACA,AKcA,AKzBO,ANiCP,ALpBQ,EMYR,ADQA,IJtBI,GUbE,ANmCC,GAAA,CCRP,CAAY,GLdG,CDED,ECFI,CAAlB,EKcA,CNZoB,CMYqB,ENZlB,IAAI,CAAC,UAApB;Aa6CJ,AZ9CJ,AKWA,AKtBM,APqCA,ACJJ,ALpBM,MCFJ,GY8CU,APnCd,EDWS,EDIE,CEfX,GOmCI,AZ9CW,AKWE,COmCM,Ab5CT,CKoBG,CJtBC,AG0BZ,CH1Ba,AG0BA,CH1BnB,GY8CI,ATpBE,ACJiB,ALpBF,CMSrB,AFewB,CSoB4B,Cb5C5B,EIwBlB,ECJW,ALpBW,CAAC,CKoBG,ILpBR,CAAW,GKoBjC,QLpBsB,CAAhB,EWbsB,QAAxB,EAAkC,MAAlC;AE0DN,APjCE,AKxBG,APqCA,ACJJ,ALpBO,OWrBJ,APyCA,EETG,IFaI,KEbT,ANXY,GMWK,MNXI,GMWrB,ANXwB,OAAO,CAAC,MAAR,GAAiB,CAAnC,CAH6B,CAI7B;Aa4CR,AZ/CA,AKcC,AKxBE,APqCG,AJvBE,Sa2CD,AZ/CA,CY+CC,GTpBG,EH3BE,CAAC,IG2BR,CAAa,GH3BZ,CG2BD,CH3BN,AG2BwB,CSoBjB,CZ/CmB,CY+CsB,ATpBrB,ISoBpB,CTpByB,ISqBpB,IAAI,CTrBW,CAAe,GSqBrB,SAAV,GACP,WTtBuB,CACjB,ESqBQ,CAAC,CTtBQ,EACA,ISqBT,ATrBa,CAAC,CSqBH,GTtBF,EACW,IAAI,CAAC,OSqBzB,ATtBS,ESsB+B,ATrBN,ISqBlC,CADP,ATpB8C,GSsBrD,ITvBuB,CAArB,WSuBc,CAAC,OAAD,EAAW,iBAAX,CAHpB;AAID,AZlDG,AUVD,APsCI,ACLL,EAAA,CM9CA,CVuBE,WAAW,KIuBK,GAAA;AQsCpB,AZ5DI,AKcF,AKxBD,ANiCG,ALpBM,AY0JR,CDtLF,CLuCE,QLdQ,AKcA,ADSA,CCTC,KAAD,CNXK,CMWU,ADSP,EJvBE,CIuBC,ALpBF,CAAC,CCHG,EDGA,CAAb,CKoBiB,CLpBD,CCHG,ADGF,CCHG,EDGA,SCH1B,ADGM,EAA+B,CAAC,CKoBrB,CLpBX,CKoBN,CLpB0C;AMY1C,AFaE,ACJF,ALpBQ,MIwBN,EEbE,EDSE,GCTG,EFaE,ECJE,CCTC,ANXF,EKoBI,ILpBR,IKoBgB,CAAC,GCTrB,IDSJ,CCT2B,CAAC,WAAW,CAAC,KAAD,CAAZ,IAAuB,KAAK,KAAK,KAAK,KAA7D,CAAJ,EAAyE;ALdzE,AKeE,AKxBN,APqCK,ACJD,ALpBQ,AejDZ,MJoCM,EVSE,EIwBE,CCTC,KAAL,ELfY,ADIF,CMWG,ANXF,CWbG,ANiCA,ELpBA,CCJG,AUTA,ANiCA,CCTjB,CADuE,CAEvE,CKzBqB,EXaA,CCJvB,AUTmB,ANiCO,ALpBF,CKoBG,ALpBJ,CCJK,AUThC,AXaY,SKoBR;AJvBE,AKgBA,AKxBN,ANgCI,AOoImC,AGzMvC,IVqEI,EJxBE,GW4JW,EPpIN,CAAC,KJxBK,GAAG,GIwBhB,CAAoB,MJxBM,CAAC,AW4JQ,GPpInC,AOoImC,CX5JT,CAAxB;AACA,AKgBA,AFYF,ACJA,ALrBQ,AYyJR,AGzMJ,Md6CM,EG4BE,KH5BK,CAAC,IDGE,CAAC,KCHX,ADGgB,CCHI,AG4BtB,CJzBQ,CIyBU,CCJJ,ALrBQ,OKqBtB,EJxBE,AIwBqB,CJxBY,IAAjC,EAAuC,GIwBR,CAAC,GJxBhC,OIwBF;AJvBC,AG4BC,ACJF,ALrBU,AYyJV,AGzMJ,CAAC,KXyEK,CWzEC,CHyMC,AGzMA,CHyMC,EPpIE,GDIG,AQgIA,CRhIC,CJzBD,GKqBV,GLrBgB,EIyBd,CAAmB,AJzBF,GYyJd,AGzMF,CH0MK,AG1MX,IXyEK,CWzE4B,GfgDC,EAArB,CehD0B,CAAC,aH0MJ,CAAC,MG1ME,CAAN,GAA+B,EAAhE,CAAD,EACK,GHyMgC,CG1MrC,CH0M0D,AGzMhD,IHyM2B,CAD5B,CAAL,CGzMJ,CH0MkE;AN7I5D,AFaA,ACJH,ALrBU,AY0JP,AGjMN,MXgEM,IEbI,CAAC,AM8IA,IZ5JC,KI2BQ,CAAC,AJzBF,MY0Jb,CRjIA,CAAuB,CQiIC,IAAI,GRjI5B,AQiIwB,EN9IP,AM8IjB,CAD4D,CAE5D,GN/IK,CAAL,EAAyB;ALf3B,AKgBI,AFaH,AJzBS,WCJH,EKgBE,OLhBO,EKgBZ,ANZY,CMYG,ELhBE,CAAC,CAAf,ADIc,CMYjB,ENZoB,CCJG,AKgBA,IAAvB,CLhB4B,CAAC,SAAD,CAAL,CAAiB,IDIE,CCJnB,ADIoB,IAAvB,CCJ8B,ADIF,CAA5B,CAAd,SCJV,EAAmE;AACjE,AKgBC,ADL8C,AOmJ/C,YAAM,eAAe,GACjB,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,gBADhC;AX7JA,AKgBD,AFYD,AJzBU,UCHJ,CG4BC,QAAP,CJzBc,CCHG,GAAG,CAAlB,ADGiB,ECHI,GDGC,IAAV,IAAkB,QAAQ,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,oBAAX,CAA9B,EAAgE;ACFtE,AKgBL,AFYA,AJzBa,AY2JV,UAAI,KX9JK,GDGC,CAAC,GAAG,CAAC,CCHG,ADGF,CY2JG,IX9JI,ADGT,CCHU,ADGF,AY2JE,CX9JtB,ADGY,ECHa,ADGF,KAAK,CAAC,AY2J/B,EAAmC,GZ3JrB,IAA0B,KAAK,CAAC,CAAD,CAA/B,GACA,KAAK,CAAC,CAAD,CAAL,CAAS,KAAT,CAAe,CAAf,EAAkB,CAAC,oBAAoB,CAAC,MAAxC,CADA,GACkD,KAAK,CAAC,CAAD,CAD3D;ACFN,ADIK,AY0JP,AGlMR,MAAM,EHkME,EX9JE,KAAK,CAAC,OW8JO,CAAC,CX9JT,CAAL,AcpCgB,CdoCC,EcpCE,EHkMrB,AGlMR,CdoCU,AW+JE,CAAC,CAAD,EX/JwB,AW+JC,CAAzB,KACI,KXhKN,AWgKW,gBAAL,CAAuB,GAAvB,CAA2B,CAA3B,EAA8B,CAA9B,CAFR;AX7JE,AKgBR,AFvH2B,AQuQtB,AGnMP,ETmDE,MAAM,ELhBE,CKgBF,QLhBW,GAAG,8BAA8B,CAAC,KAAD,EAAQ,SAAR,CAA1C;AY6DJ,AZ5DG,AKgBL,ANbU,AY6JT,SCpGW,EP5CL,KNbG,MAAM,GayDd,AbzDiB,CayDU,OAA3B,AbzDyB,CAAC,CayDsC,IP5C/C,KAAK,INbL,CMaZ,ANboC,CMa3C,ANbmB,CAAT,CMasB;AO6ClC,AP5CI,ANbO,AY6JV,SCpGM,GP5CG,KO4CK,CAAC,GP5CG,GAAG,KAAK,KAAvB;AO4Ca,AZ5DX,AKiBF,AMiJJ,ICtGiB,OP3CR,EO2CiB,EAAE,CP3CxB,GAAa,CO2CD,aP3CZ;AO2C+B,AZ3D9B,AKiBD,ANdM,IawDyB,EP1C/B,QO0CyC,AbxDnC,CMcG,CO0CkC,AP1CjC,IAAD,ANdG,CMcZ,ANda,EawDqC,KAAA,IAAP,CbxDrC,CAAoB,EawDiB,IbxDrC,EAA4B,CawDgB,GbxD5C,EawD4C,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE;AAAxC,APzCb,ANdO,GauDK,CAAf,ebvDe,KAAL,CAAW,IAAX,CAAgB;AawD3B,AZ3DK,AUNN,AXS6B,MCHvB,AUNA,SVMS,CDGc,ECHX,EDGe,EAAE,KWTR,CXSC,EWRxB,CAAC,SAAD,EAAoB,MVKwB,CAAC,IUL7C,CVK4C,CULO,CVKC,OULpD,EVK4C,CAA1C,EULwE;AEkE9E,AZ5DK,AKiBD,AKtBE,AXOqC,EWPrC,MLsBE,KAAK,GKtBO,AXOuB,CWPtB,CLsBb,EKtBF,CAAmB,AXOuB,EMezB,ANf2B,EAAE,KWP9C,EADwE,CAExE,ILqBF,EAA6B;ALhB9B,AKiBG,AKrBA,AXKsB,eAAhB;ACAX,AKiBI,AKrBC,AXKK,AenCL,MAAO,Ofc0B,CAsB7B,EepCJ,SAA0B,gCAA1B,CAAyC;AfqCrC,AeKR;ATUE,AKrBE,QAAM,CLqBH,SAAL,CAAe,IKrBQ,ELqBvB,CKpBM,CAAC,CAAC,QAAF,GAAa,QAAQ,CAAC,OAAtB,GAAgC,QAAQ,CAAC,aAAT,CAAuB,UAAvB,CADpC,CALwE,CAOxE;ALoBH,AI1HH;ACuGM,AXII,QWJE,MAAM,EXIJ,CWJO,MXIA,CAAC,IWJU,CAAC,IXIZ,CAAP,KAAuB,EAA3B,EAA+B,EWJpB,CAA6B,OAA7B,CAAf;ALXoB,AKYpB,AXIM,AU3GZ,QCuGY,MXIA,MAAM,CAAC,YAAP,CAAoB,YAAY,EAAhC,EAAoC,IAApC;AMiBZ,AKrBa,AXKD,IWLC,UXKD,aAAa,CAAC,IAAd,CAAmB,IAAnB;AWLA,AXMD,AeOO,ALjHlB,MCoGuB,GIad,GJbH,CATwE,AXYpE,CWFJ,IIYY,CfPD,EeOC;AfNL,AeOT,WAAO,GfPE,EeOG,EfPU,CAAC,GeOvB,CfPS,GAAqB,OAAO,CAAC,SAAD,CAA5B;Aa2DN,AFhED,AXMK,AeOR,ALjHH,MGoKa,AFhEH,KEgEQ,CFhEF,CXvBuB,CauFjB,AbzDZ,GWPW,CAAf,EAAkB,CEgEH,IACjB,gBAAgB,CAAC,OAAD,CADb;AAGP,AFlEQ,AIcN;AJbM,ADrGR;ACsGQ,AXKE,YAAA,SAAS,IAAI,SAAb;AWJF,AXKC,AeOwB,ALlHjC,SKkHiB,gBAAgB,GAAA;AJXzB,AXKD,AeOH,Sf1CS,MAmCA,IAAI,IAAI,CAAC,QAAL,KAAkB;AWJ3B,AXI6B,AeQjC,ALlHJ,QKkHQ,KAAK,cAAL,CAAoB,yBAAyB,CAAC,SAAD,EAAY,IAAZ,CAA7C,CAAJ,EAAqE;AJXjE,AXGK,AeSP,QfTwD;AWFtD,AXGA,AeSH,ALnHL,KK+GiC,CAK7B,QfVS,IAAgB,CAAC,IAAjB,KAA0B,MAA/B,EAAuC;AMgBzC,AKlBE,AXGE,AYoKa,AG1JnB,MTKS,GMqJJ,KNrJH,CAAe,GNfL,KYoKO,CZpKD,AYqKhB,GZrKmB,CYoKF,EAEjB,CZtKuB,CAAC,KYsKxB,GAA+B,EZtK3B,CADqC,CAErC,sBYmKa,EAEwC;ANhJ7D,AKxBM,AXIE,AYqKN,AG5JA,ALrHJ,EJgIE,WAAA,CAAY,OAAZ,EAAkC;AAHlC,AKpBM,AXIE,AYqKN,AG5JA,IJbI,KLoBN,CKpBY,CAAC,GLoBb,GAAiB,EKpBX,CAAiB,MLoBvB,eKpBM,CAAuC,eAAvC,EAAwD,SAAxD;ALqBE,AKpBF,AXIE,AYqKN,AG5JA,ALpHJ,SJ2HU,cAAA,GAA0B,SAA1B;AAGN,AKtBG,ACyKH,AG5JA,STSK,AMmJA,ONnJL,GAAe,OAAf,KMmJA;ANlJD,ANnBO,AU1JV,gBV0Jc,IAAI,CAAC,eAAL,KAAyB,IAAzB,IAAiC,KAAK,KAAK,aAA/C,EAA8D;AMqBtE,AKxBI,AXIM,AYqKR,QDzKQ,CCyKH,KZrKG,KAAK,GWJS,GAAG,ACyKzB,CAAuB,GAAvB,CAA2B,GDzKM,CAAC,ACyKlC,EAAiC,OAAjC,EAL2D,CAM3D,CD1KyB,CAAuB,OAAvB,CAAvB,CAzBwE,CA0BxE;AACA,AXGM,AYsKR,AG9JA,UAAM,IfRE,MAAM,AeQE,CfRD,EeQI,KAAK,KfRhB,CAAoB,GeQT,EAAnB,OfRwC,EAAhC,EAAoC,IAApC;AWFN,AXGK,AYsKP;ADxKE,ACyKF,AG9JA,QAAI,KAAK,CAAC,OAAN,CAAc,UAAd,CAAJ,EAA+B;AJV7B,AXEI,AYuKN,AG9JE,YfTI,aAAa,GAAG,KAAhB;AACA,AeSJ,iBfTS,KAAL,CAAW,IAAX,CAAgB;AWFpB,AXEqB,AeUrB,OJZK,IAAI,CAAC,EXEW,CWFR,CAAb,EAAgB,AXES,CWFR,CXEU,EWFP,IXEA,EWFpB,EAA4B,CAAC,EAA7B,EAAiC;ALuBrC,AKtBM,AXCiC,AYuKrC,AG5JE,ETUJ,MMkJM,EDxKM,ELsBF,CAAC,CNrB4B,CWDtB,ACwKJ,CAAC,EDxKM,ILsBV,EAAgB,AKtBA,CAAC,CAAD,ACwKpB,CDxKA,GCwKsB,KAAK,SAAL,CAAe,cAAf,CAA8B,IAA9B,CAA1B,EAA+D;ANjJ/D,AKtBI,AXAkB,AYwKpB,AG5JA,IJZE,KLsBC,AKtBI,CAAC,GXAJ,EAXqC,CAYrC,EMqBN,EKtBI,CLsBa,AKtBK,SLsBI,CAAC,CKtBvB,CAA8B,KAA9B,ILsBa,CAAsB,6BAAtB,CAAjB;AACA,AKtBI,AXCE,AYuKL,AG5JC,IJZE,KLsBC,OAAL,EKtBkB,CLsBH,AKtBI,SLsBK,CAAC,CKtBrB,IAA+B,KAAK,CLsBzB,AKtB0B,CLsBJ,UKtBjC,mBLsBW,CAAf;AACD,AKtBI,AIYD,GJ/CwE,CAoCxE,QIWM,SAAS,GAAG,CAAC,MAAD,EAAyB,GAAzB,KACY,MAAM,CAAC,WAAP,CACtB,CAAC,GAAD,EAA8B,CAA9B,KACI;ATShB,ANvBQ,AYuKN,AGxJU,MAAA,IHwJJ,CGxJS,CAAC,CHwJP,GZvKC,AYuKE,GGxJF,CffI,AeeU,CffT,AeeL,EHwJS,EGxJU,EHwJjB,KZvKF,AYuKkB,EGxJU,CAAC,CAAD,CffP,CeeW,EHwJ9B,CZvKN,AeegC,CAA5B,Cff2B,AYuKE,GGxJW,GHwJL,AGxJQ,CAAC,CHwJ1C,EGxJsC,CHwJA,AGxJQ,CAAR,GAAY,CHwJP,EGxJ7C,CAHsB,CH2J2B,CGvJjD,CHuJV,EG3JgC,CAD9B,CAP6B,CAa7B;AfhBO,AYuKT,AGtJE,UHsJI,IZvKG,IAAgB,CAAC,CYuKV,GZvKP,AYuKU,GZvKc,EAAxB,AYuKe,qBAAL,CAA2B,IAA3B,EAAiC,GAAjC,EAAsC,OAAtC,CAAnB;ADvKE,AXCK,AUtJX,ECqJM,WXDI,MAEO,WWDiB,CAAC,SAAD,CAA5B,CArCwE,CAsCxE;AACA,AXAM,AYsKR,QAAI,MZtKI,IYsKM,KAAK,IZtKE,CAAC,IAAd,AYsKR,CZtK2B,CYsKG,GZtKtB;AACA,AYsKN,AGvJA,MHuJA,MAAM,AGvJA,CHuJC,CZtKD,CeeG,GAAG,CffD,QYsKX,AGvJqB,CHuJC,AGvJA,KHuJK,KGvJN,EAAa,EHuJlC,EAAsC,AGvJA,GAAJ,CHuJlC,CGvJqB,CHuJuB,AGvJ5C,UHuJA;ADtKA,AXCK,AYsKN,AGvJC,QJhBM,IIgBA,GJhBO,GAAG,AIgBJ,GAAwB,EAApC,UJhB+B,CAAC,OAAhC;AEiEA,ADuGH,AGvJG,MAAA,GFgDU,AEhDP,CAAC,IFgDJ,CAAgB,EEhDhB,CAAa,CAAD,IFgDZ,AEhDmB,EFgDe,IEhDT,CFgDzB,AEhD0B,EFgDuB,KEhD9B,CAAe,CAAf,CAAnB;AFiDJ,AFjEI,AXCI,AYwKR,AGxJI,MJjBI,CAAC,CAAC,CEiEH,CAAC,CEhDC,CfhBD,IWDJ,EAAgB,AIiBhB,GfhBa,AegBE,MFgDZ,AEhDH,EFiDI;AACA,AFlEF,AXCC,AegBJ,EFiDK,GEpEN,CFkEK,KAE4B,AbtF7B,AeqCG,MfhBI,+BWDgB,QAAvB,EAAiC,cAAjC,EAAiD,OAAO,CAAC,UAAzD;AEmEJ,AP3CF,AKvBK,AXCG,AegBJ,ETMJ,CKzBI,MAEO,CEkEH,CEjDC,KfhBG,CMsBG,ANtBF,CMsBG,ASNZ,EFiDc,AbjEF,CMsBD,ANtBE,AegBE,CfhBX,CaiEa,AP3CI,QSNI,KAAK,SAAf,GAA2B,EAA3B,GAAgC,CAAC,UAAD,CAA/C;AFkDA,AP3CF,AKvBI,AIiBH,IJjBG,CIjByB,CFmF3B,AE/CF,GF+CK,AP3CA,EKvBM,CEkEN,AFlEO,MLuBZ,GAAiB,GAAjB,AKvBI,CAAqB,cAArB,EAAqC,OAAO,CAAC,UAA7C;AEmEA,AP3CJ,AKvBG,AXAG,AemBN,GJhE0E,CA8CxE,KLsBG,MO2CM,CP3CX,GAAe,ANvBF,CakEG,AblEF,CAAC,CMuBG,CAAC,CNvBA,IAAgB,CAAC,CakEzB,CAAgB,EblER,CMuBnB,ANvByC,OAAtB,CAA8B,EakEtC,CAA8B,GblEtB,EAAsC,CAAC,EakE/C,CAAP,AblEyD,CAA1C,CAAN,MAAwD,CAAC,CAAhE,EAAmE;AamEtE,AP3CJ,AKtBG,AXDM,AemBR,OF4CmB;APtCrB,AKvBI,AXDM,AemBR;AF+CE,AbjEM,AemBR,MF8CE,UAAU,EAAE,IAJK;AAKjB,AbjEM,AemBR,ALvKJ,MGqNM,YAAY,EAAE;AALG,AF5DjB,AXCM,EWDN,GE4DF,GF5DQ,CAAC,QAAP,CAAiB,CXCN,KAAL,CAAW,IAAX,CAAgB,SWDtB,CAAuC,eAAvC,EAAwD,SAAxD;AACA,AXAuB,QWAjB,KAAK,GAAG,AXAS,IAAI,EAAE,CWAR,CAAC,IXAA,SWAR,CAAsB,OAAtB,CAAd;AEkEF,AblEuC,AemBvC,QF+CI,CE/CC,IF+CL,EAAW,CblE4B,AemBvC,GAAe,EfnB6B,EAAE,CAAC,AemB3B,OAAL,CAAa,GAAb,CAAkB,CAAD,IAAM;AFgDpC,AFlEA,AXDsB,AeoBtB,ALhKN,MC6IU,IImBA,CAAC,CF+CC,AFlEI,CAAC,EXDL,CamEI,GACN,EFnEA,CAAiB,CEmEb,AEhDS,KFgDJ,MFnET,EImBA,CFgDA,CFnEiC,EEmEZ,AEhDS,CAAC,EJnBO,CEmEtC,GAA6B,CFnEc,IAA/C,EAAqD,UEmEc,CAAC,GADpE,QE/CA,EAAgE;AFiDhE,AP3CJ,AKxBM,AXDI,AeoBJ,AL/IR,EJoJE,UO2CU,EbpEA,CaoEG,CP3CC,CAAC,CO2CC,GP3CF,EAAe,ANzBV,EaoEI,IAAP,KAAgB,QAAhB,GAA2B,MAAM,EAAjC,GAAsC,KAAK,IAAI,EAA3D;AP1CF,AKxBI,AXDG,AeoBH,AL/IR,IJoJI,IAAI,CAAC,QAAL,CAAc,KAAK,SAAL,GAAiB,6BAA/B;AO2CE,AFlEE,AXDC,AeoBD,AL/IR,IC4HQ,EEkEF,SFlEa,CEkEH,AFlEI,CEkEH,GAAX,GAAiB,KFlEf,CAAyB,KAAK,CEkEf,AFlEgB,SAAN,CAAgB,IAAhB,CAAzB,EAAgD,WAAW,CAAC,UAA5D;AEmEA,AP3CJ,AKvBG,AXDA,AeoBC,AL/IR,GCwHM,CL2BF,AInJA,IJmJI,CAAC,AKvBI,ED5HF,CG8LE,CFlEI,CAAC,CAAC,EEmE2B,AP5C1C,AInJA,CJmJc,EO2CL,EH9LS,CJmJC,AKvBV,EAAgB,CEmEoC,IP5C/C,GAAe,AInJjC,EG8LQ,AH9L2B,EG+LyC,yBP5CxE;AO6CQ,AP5CT,AKvBK,AXDH,AeoBG,AL/IN,GAAC,EVhB+D,CA6I9D,GU7HK,CAAC,IK+II,CFgDkD,GAApD,GEhDS,CFiDN,EEjDS,GFiDJ,AHhMX,CAAN,CK+I0B,CAAC,GL/IG,IGgMlB,CAAgB,CEjDP,AL/Ie,CK+IC,AL/IA,KK+IhB,CAAsB,IAAtB,CFiDT,AEjDoC,CFiDN,AEjDO,CAAC,IL/Id,CAAN,EGgMlB,CADL,AEhDc,AL/IqC,EKgJhC,ALhJ1B,CAAD,EAAgE,GK+I1C,CACY,ALhJlC,CKgJmC,ALhJkC,GKgJnC,EAAM,ELhJxC,EKgJkC,KAAe,GAAG,GAAG,IAAI,CAAC,OADtC,EAC+C,EAD/C,CAAhB;AFkDC,AP5CP,AKxBM,AIoBA,ALhJP,eKgJc,uBAAU,OAAV,CAAP;AJnBA,AIoBD,AL/IP;AG+LQ,AFnEA,AXDJ,SAAK,MaqEG,AbrEG,CAAX,IaqE4D,AbrE5C,GaqER,CADJ,SbpEJ,EAA+B;AasE5B,AFpEC,AXDF,AeoBA,MfpBA,Ca6DA,Ab7DC,CAAC,KeoBK,CAAP,IfpBA,CAAc,WAAd,CAA0B,CAA1B;AasED,AFpEG,AXDH,AeoBA,KAXc,CAAf;AJPI,AXDL,AeoBA;AFiDC,AFnEI,AI4BN,WFuCU,IAAI,KAAK,SAAV,GACH,WAAW,CAAC,UAAD,EAAa,iBAAb,EAA0C,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AAGD,AP/CD,AKtBM,AXxJa,AU2Bd,EJmJL,COoBA,CF1CM,ED7HK,IAAI,CC6HF,CAAC,CD7HI,CAAC,GJmJJ,CAAC,GAAD,AInJG,EJmJW,AInJqB,CC6H5C,CAAqB,CD7H0B,MAAnC,KAChB,EC4HI,EAAqC,AD5HrC,OC4H4C,CAAC,UAA7C,YD5HJ,CAAmB,OAAnB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,kDAA5C,CADG;AGmMN,AP/CG,AKtBI,ACyKgC,AFpSxC,EGkMA,EPjDI,GAAG,CAAC,CMmJW,CDzKL,MLsBV,CAAa,AKtBI,GAAG,ELsBF,EKtBM,GAAJ,EAAhB,CCyKgC,CNnJvB,AMoJX,GNpJ4B,CMmJM,EACf,GADe,EACK,OADL,EACiC,YNpJrE;AOkDJ,AFvEQ,AC0KJ,ID1KI,OAAO,AC0KJ,CD1KK,GAAR,CAAY,cAAZ;AEwER,APlDI,AKrBI,AC0KF,SNrJG,OAAL,GAAe,GAAG,CAAC,OAAnB,mBKrB4B,QAAxB,EAAkC,OAAlC;AEwER,APlDI,AKrBG,AXJP,AY8KM,INrJF,ENzBE,AY8KA,CNrJC,CAAC,CMqJC,GAAA,EZ9KK,CMyBV,ENzBa,CMyBC,ANzBA,GAAD,EMyBM,ANzBQ,MAAd,GMyBb,ENzBsD;Aa4E1D,APlDG,AKrBE,AXJH,AY8KM,CDhPR,OXkEQ,KAAK,EY8KG,CZ9KA,GAAG,CAAC,AY8K8B,GAAlC,CAAR,EZ9KQ,GAAa,MAAM,CAAC,MAAlC;AWUF,AXTE,AY8KK,AGhJK,EAAA,KH4ID,EZ1KF,Ge8Ba,Ef9BR,Ce8BQ,Gf9BJ,CAAT,IAAc,GAAG,CAAC,KAAJ,CAAU,KAAV,MAAqB,MAA1C;Aa2EF,APjDE,ANzBD,Ae8BG,CfjCJ,CM4BE,QAAQ,ASKA,CTLC,KAAD,EAAe,ESKrB;ATJA,AMoJE,MAAA,GNpJG,AMoJA,CAAwB,KAAxB,EAAsC,MNpJ3C,GAAsB,KAAtB;AACD,ANAI,AYoJC,AGhJH,ALxJE,MVoJM,AUpJA,GKwJH,ALxJM,GAAG,CAAC,CEwSN,MGhJT,ALxJc,CKwJyB,CHgJtB,AFxS6B,GEyStC,AFzSyC,CVoJrB,GAAI,CYqJgB,CFzSlC,EVoJiB,CYqJvB,CADL,CFvSJ,CVmJwD,AeIvD,GLvJG,CVmJwD,CAAC,KAAL,KAAe,CAAC,CAArE,EAEP,iBUrJI,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,kDAA9C,CADG;AVuJP,AYmJS,aAAwC,GAAxC,IAAyD,KAAzD;ANpJP,AMqJO,AGlJJ,ETHH,MAAM,CSKD,ETLC,EMsJK,MGnJR,GAEe,KAAK,OHgJhB,CAC0B,IAD1B,EACgC,EGjJrB,EAFf,CAHiB,CAMlB,EH+IK,EAC0C,OAD1C;ANpJL,AMsJG,AGhJH,OHqIO,CN3IH,KAAK,SAAL,CAAe,UAAf,KAA8B,IAAlC,EAAwC;AACtC,ASMF;ATLC,AMqJC,MAAA,YAAY,EAAE,IAZT;AZ1IJ,AYuJD,AGhJF,MfPS,AYuJP,EGhJE,MAAM,CAAC,CHgJC,EZvJS,AYuJP,GZvJU,IeOpB,EfP0B,EeOL,KAAK,CfPQ,CAAC,QeOd,KfPK,CAAuB,EAAvB,CAA3B,GeOiD,MAAM,CAAC,UAA3D,EAAuE;ATLvE,ANAJ,AYwIW,AGlIL,KHkIF,MNxIO,ASMA,WAAL,iBTNiB,KAAK,cAAjB,CAAP,EAAyC;AACvC,AMsJH,AGhJE,YTNO,SAAS,GAAG,KAAK,cAAvB;AACA,AMuJJ,AGjJC,WTNQ,cAAL,GAAsB,cAAtB;AACA,ASOJ,MTPI,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,UAAM,KAAK,GAAG,KAAK,cAAnB;;AACA,QAAI,KAAK,KAAK,cAAd,EAAwB;AACtB;AACD;;AACD,ASQQ,EAAA,MTRJ,USQoB,CTRT,CAAC,CSQQ,ITRT,CAAf,EAAwB;AACtB,ASQF,UTRM,CSQC,ITRI,CSQC,ITRI,KAAK,GSQd,CACF,CTTH,EAA0B,ESSlB,WAAL,CAAuC,iBADrC,CAAP;ATPI,ASSL,aTTU,YAAL,CAAkB,KAAlB;AACD,ASUL;ATTG,AMwJgC,KN5JjC,IM4Je,ENxJR,IAAI,KAAK,OMwJiB,CAAC,INxJN,AMwJK,EAAkB,4BNxJ5C,EAAqC;AAC1C,AMwJF,WNxJO,AMwJA,KAAK,gBAAL,CNxJL,CAA4B,EMwJE,GNxJ9B,EMwJmC,gBAAL,CAAsB,GAAtB,CAA0B,IAA1B,CAAzB,IACH,0BADJ;ANvJC,AMyJF,KN3JQ,MAEA,IAAI,KAAK,YAAY,IAArB,EAA2B;AAChC,AM0JJ,WN1JS,YAAL,CAAkB,KAAlB;AACD,KAFM,MAEA,IAAI,UAAU,CAAC,KAAD,CAAd,EAAuB;AAC5B,WAAK,gBAAL,CAAsB,KAAtB;AACD,KAFM,MAEA,IAAI,KAAK,KAAK,aAAd,EAAuB;AAC5B,WAAK,KAAL,GAAa,aAAb;AACA,WAAK,KAAL;AACD,KAHM,MAGA;AOoDL,APnDA,AMwJqB,AGhJf,EAAA,OF2CI,ADqGG,IGhJI,GAAA,CHgJI,ECrGrB,CAAqB,ADqGA,QCrGrB,EAAqC;AACzC,APnDI,AMwJF,AGhJA,SF2CK,CAAC,AE3CA,CTRC,KSQK,GAAI,ITRd,CAAkB,ASQC,GF2ChB,EACC,APpDJ,MSQc,CAAuC,OAAvD;AF6CM,APpDL,AMwJD,ECpGM,IAFD,IDsGC,CCpG2B,QDoGlB,GAAG,MAAM,CAAC,cAAP,CAAsB,IAAtB,CAAlB;ACnGA,APpDD,ANAI,AeOH,MfPS,EeOL,EF6CE,IE7CI,CAAC,KF6CK,CE7CZ,EF6Ce,GE7CG,CAAtB,CfP+B,CeON,EfNzB;AaoDE,AbnDF,AYsJA,AGhJE,QHgJE,CAAC,GCnGG,GAAN,GAAS,ADmGG,CAAC,cAAV,CAAyB,SAAzB,CAAL,EAA0C,8FZxJvC;AasDC,APpDE,AMuJJ,AGhJD,ETPK,GSGa,CHoJjB,AG/IF,ITRc,CAAC,GOoDL,CPpDI,AMuJH,CAAC,CNvJa,EOoDV,KDmGb,SCnGE;AACA,APpDJ,AMuJC,AG/ID,STRK,MOoDM,CPpDX,CAAa,GOoDG,OPpDhB,CAAyB,EOoDd,CAAgB,SPpD3B,CAAsC,GOoD3B,CAA8B,APpDzC,EAA4C,KAAK,COoDtC,CAAP,KPpDJ;AOqDG,APpDJ,ASQC,OFwCmB;ADuGnB,AG9IA,SH8IK,SAAL,IAAkB,IAAlB;AClGE,APnDI,ASQN,ETRM,IOmDJ,QPnDgB,CAAC,COmDP,EAAE,EPnDI,EO8CC,AP9CW;AOoD5B,APnDF,AMqJA,MClGE,EPnDE,CMqJC,INrJI,KOmDK,APnDV,EOmDY,GPnDG,KAAnB,EAA0B,CMqJ1B,GAPuB,CAQvB;ACzGmB,AP5CjB,KO4CF;AAQA,APnDC,ASMD,QAAI,GF6CI,GE7CE,CF6CE,AE7CD,KF6CM,GE7Cb,KAAoB,CF6CjB,GACH,KE9CA,IAAiC,CAAC,CF8CvB,CAAC,IE9C4B,CAAC,KF8C9B,EAAa,CE9CU,CAAgB,YAAtD,EAAoE,CF8CrD,EAA0C,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AAGD,AD+FC,AG9IE,GFiCJ,GEjCI,GH8IG,GG9IG,CAAC,QAAP,CAAgB,UH8IlB,CG9IE,CAA6B,CH8IA,IAAI,GAAJ,EAA/B,CATuB,CAUvB,SG/IE,CACI,MAAM,CAAC,GAAP,CAAY,CAAD,IAAQ,CAAe,CAAC,OAAnC,CADJ,EACiD,KAAK,SADtD;AFgDL,APtDG,AMsJA,AG9IC,KAHD,ITLK,ESQE,GTRP,CSQW,mCAAJ,EAAiC;AFgD5C,AD+FI,AG9IG,WAAK,UAAL,CAA+B,kBAA/B,GACG,MAAM,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,YAAY,aAAb,GAA6B,CAA7B,GAAiC,CAAC,CAAC,UAArD,CADH;ATRH,AMuJA,AG7IC,KAHM,ITPF,ESUE,MTVP,CAAc,KAAd;ASWE;ATVF,AMuJA,AG5IE,QH4IE,CNvJC,IMuJI,CNvJT,GAAa,KAAb,KMuJI,CAAoB,yBAAyB,CAAC,YAAD,EAAe,IAAf,CAA7C,CAAJ,EAAwE;ANtJzE,AMuJG,AG5IA,WAAK,CH4IC,KAAK,GAAG,KAAK,UAAnB,CADsE,CAEtE,EG7IA,GAAoC,IAApC;AACD;ATVK,AMuJJ,AG5IH,ETXO,UMuJE,ENvJU,CAAC,KAAD,AMuJF,ENvJiB,CMuJd,CACf,GAAG,MAAM,CAAC,mBAAP,CAA2B,KAA3B,CADY,EAEf,IAAI,OAAO,MAAM,CAAC,qBAAd,KAAwC,UAAzC,GACC,MAAM,CAAC,qBAAP,CAA6B,KAA7B,CADD,GAEC,EAFJ,CAFe,CAAjB,CAHsE,CAStE;AN5JF,AKXG,MAAM,ILWH,EKXS,ELWL,CKVV,CAAC,CLUY,KAAK,AKVlB,EACC,OLSY,CAAe,CKV5B,EAEC,OAFD,CLUA,IKRgC;ALShC,AKRE,ACoKA,AGjJJ,EAAA,ETXE,EKRM,CAAC,ELQF,EM4JE,CN5JC,EKRF,GLQO,AM4JA,CDpKK,ACoKhB,CGjJa,ETXE,CM4JC,AGjJH,GTXP,AKRiB,GLQD,EAAhB,AM4JN,EDpKgB,ACoKU,CN5JC,IKRQ,CLQrC,CAFiC,CAGjC,KKTM,IAA2C,CAAC,OAAO,CAAC,SAAxD,EAAmE;ALUrE,AKTI,ACoKA,AGjJJ,UJnBU,AImBJ,IJnBQ,KAAJ,CAAU,OImBpB,GADe,CAEf,0BJpBU,CAAN;AACD,ACoKC,AGhJJ;ATXA,AM4JI,UN5JE,aAAa,GACf,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,MAAM,CAAC,KAAD,CAD9C;AKRE,ACqKE,AGjJJ,QJpBQ,AIoBJ,KHiJK,AGjJA,IJpBQ,GAAG,GIoBhB,IJpBuB,ACqKvB,AGjJmB,CJpBK,ACqKJ,CAApB,EAAwB,EGjJC,CAAC,EHiJW,CDrKvC,ACqKwC,CAAD,CAArC,GGjJmB,KAAoB,SAA3C,EAAsD;ATVtD,AM4JG,AGjJD,MAAA,ETXE,IAAI,ASWA,CAAC,ITXI,ISWX,CTXgB,ASWA,OTXL,CAAa,ISWxB,CAA6B,IAA7B,MTXE,IACA,IAAI,CAAC,QAAL,KAAkB;AAAE,AKVtB,ACsKD,AGjJA,QJrBO,WAAW,GAAG,cAAM,GAAN,CAAU,SAAV,CAApB;ALSF,AM8JD,AGjJA,MTZ+C;AAC5C,AKVA,ACwKJ,AGjJA,QJvBU,YAAY,GAAG,yBAAyB,IAC1C,SAAS,CAAC,QAAV,KAAuB;ALU3B,AKV8B;ALW9B,AKZqB,KAEjB,CAAC,CAAE,SAAwB,CAAC,IAFhC,CAN8B,CAS9B;ALUC,QAAA,IAAa,CAAC,IAAd,GAAqB,aAArB;AACF,AKVC,OLIF,CKJQ,KLUD,WKViB,GAAG,YAAY,IAAI,CAAC,cAAc,CAAC,GAAf,CAAmB,SAAnB,CAA1C,CAV8B,CAW9B;ALUA,AKTA,WLSK,YAAL,CAAkB,QAAQ,CAAC,cAAT,CAAwB,aAAxB,CAAlB;AACD,AM4JqC,SAAzB,yBAAyB,CACpC,IADoC,EACjB,OADiB,EACW;ADtK/C,ACuKF,QDvKQ,ECuKF,SAAS,GAAG,CDvKK,GACjB,GCsKmB,CAAC,SAA1B,GDtKsB,GAAG,QAAQ,CAAC,sBAAT,EAAH,GAAuC,SAD3D;ALUF,AKRE,ACsKF,AGlJQ,EAAA,MAAM,CTZT,ASYU,EHkJR,GN9JP,GAAa,GM8JG,EN9JhB,AKPM,GCqKe,CGlJP,EJpBZ,AIoB8C,EJlB1C,ACoKC,GACH,SADG,GDtKL,ACwKG,EDrKC,KCqKM,CDrKN,CAAA,MAAA,CAAA,ACqKD,KAAqB,QAArB,GACI,SADJ,GAEK,OAAO,IAAP,KAAgB,QAAhB,GAA2B,IAAI,CAAC,WAAL,EAA3B,GAAgD,SAJ1D;AN7JD,AKNQ,ACwKR,AGtJC,IJlBO,eAAe,EAAE,oBAAoB,CAAC,SAAD;AAAtC,AC0KR,AGvJE,GJnBM,EAAsD,OAAtD,CAHJ,EAf8B,CAoB9B;AE+DA,APzDI,AKLJ,AIiBF,ETZM,OOyDM,QAAV,CAAmB,MPzDO,CAAC,COyD3B,EAAmC,EPzDT,EAAsB;AO0DpD,APzDE,AKLE,AIiBF,SF6CK,CAAC,APzDA,ASYA,QTZQ,GAAG,GSYG,ETZE,COyDjB,AE7CkB,EF8CjB,GE9CsB,CTZX,CAAa,ISYP,EAAvB,STZiB,CAA6B,KAA7B,CAAjB;AO2DM,AF/DJ,AIiBF,EF8CM,IAFD,IE5CC,CF8C2B,KE9CjC,CAAa,iBAAb,EALgD,CAMhD;AF8CA,AP3DA,AKJE,QLIE,EO2DE,GP3DG,KAAL,EO2DY,GAAG,OP3DO,kCAAtB,IACA,KAAK,KAAL,CAAW,QAAX,KAAwB,QAD5B,EACsC;AO2DpC,AP1DA,AKLA,AIiBF,MF8CE,EE9CE,CF8CC,EP1DE,CO0DF,IP1DH,CAAW,KSYK,CTZhB,CAAkB,GSYG,ETZE,CAAC,MAAxB,WSYF,EAA6C;AF+CzC,AP1DH,AKLC,AIiBC,KTfH,MAGO,ASYC,IF8CG,KAAK,EE9Cb,CACI,MADJ,CF8CQ,AE5CD,CF4CiB,aE9CxB,EAGO,CF2CC,CAAiC,GE3C7B,KF2CJ,CAAP,IE9CD,EAIO;AF2CP,AP1DD,AKLA,AIoBS,OFwCQ,CExCR,SAAS,EAAE,KAAK,SAAjB;ATdR,AKLA,ACsK2B,AGnJS,QAAA,CHmJzB,WGnJqC,EAAE,GHmJvB,CAC3B,KAD2B,EACX,GADW,EACG,UAAA,GAAyB,QAD5B,EACoC;ACxG/D,APzDA,AMkKF,AGrJU,MF4CR,CEhDC,IHyJI,KCzGK,EAAE,GDyGG,CC7GE,AD6GD,KAAD,EAAQ,GAAR,CAAjB;ACxGE,APzDA,AKNA,ACwKH,AGrJE,KAb+C,CFyD9C,AF/DI,AIoBN,YF2Cc,EAAE,EF/Dd,EAAsB;AE0DL,APnDjB,AKNE,ACyKN,AGrJE,KFqCA,KFzDU,ELMF,EKNM,GAAG,GLMD,GACV,IAAI,IKPa,GAAN,CAAU,eAAV,CAAb,ULOE,CAAqB,QAArB,EAA+B,KAAK,CAAC,SAArC,EAAgD,KAAK,OAArD,CADJ;AO0DF,AE3CA,WF2CQ,IAAI,KAAK,SAAV,GACH,WAAW,CAAC,UAAD,EAAa,iBAAb,EAA0C,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AAGD,AP3DG,AKPE,GEqDN,SP9CU,MKPE,ELOM,GAAG,CKPf,CAAa,MLOU,CAAC,MAAT,EAAjB,AKPE,EAFoB,CAGpB;AEkEP,AFjEO;ALMF,AKLE,AIkBJ,MTbE,ESaE,KAAK,CTbC,CAAC,MAAT,CAAgB,KAAK,CAAC,MAAtB,OSaF,EAAuC;AFgD3C,AFjEQ,AIkBF,MF+CA,KE/CK,MF+CM,GACb,CAAC,UAAD,EAAiC,KAAjC,CEhDE,CFgD8C,EEhDV,EFgDtC,GEhDE,EFgDmE;AACnE,AP9DA,AKJE,EEkEF,MAAM,CAAC,EP9DF,YO8DL,AP9DA,CO8DsB,AP9DJ,KO8DlB,EAA6B,CP9D7B,GO8DA,EAAmC,UAAnC;AACD,AEjDE,CF8CP,UE9CY,WAAL,CAAuC,OAAvC,CAAgD,OAAhD,CAAyD,CAAD,IAAM;ATb/D,AMoKsC,AGtJpC,SHsJS,ENpKN,GScG,ETdR,GAAa,AScA,GAAG,KTdhB,GScwB,CAAC,KHsJa,CACtC,KADsC,EAClB,AGvJJ,CAAuB,MHsJD,CGtJtB,CHuJgC,AGvJ9C;AFkDR,AP/DK,AKLG,AC0KJ,AGvJI,MFiDF,EEjDE,EJnBM,AC0KJ,GGvJG,CHuJC,AGvJA,GHuJG,CD1KK,CEoEH,EFpEM,CEoEH,CAAC,CDsGC,CD1KK,AC0KJ,AGvJjB,CJnBsB,EImBD,CHuJzB,AGvJwC,CAAC,CJnBpB,EEoEH,EAAiC,EEjD/C,KFiDc,CFpEyB,KEqE1C,6BFrEoB,GACb,IAAI,CAAC,KAAL,CAAW,QADE,GAEb,SAFJ;AEsEF,APhEH,AKHK,ACwKJ,AGvJI,EFkDF,EFnEE,EEmEE,EAAE,EDqGF,GGvJG,GFiDR,GDsGc,GAAG,CGvJd,CAAgB,CJjBK,CACjB,GCuKiB,CAAC,KDxKD,AIiBrB,CAA4B,CJhBb,ECuKD,EGvJd,EHuJmC,SDxKd,EAC+B,KCuKxD,GDxKyB,CAArB;AEoEF,AFlEE,ACuKJ,AGvJG,EFkDD,KEtDC,GH2JG,CCrGK,EAAE,UDqGM,CCvGlB,EFhEe,ACwKX,OAAO,EDxKR,EAAuB,KCwKtB,IDxK+B,CAAC,ACwKX,UDxKtB,ACwKC,GAAkC,SAAlC,GAA8C,SAAS,CAAC,aAD7D;ACpGE,APhEI,AKFF,ACwKJ,AGxJC,EFkDC,APhEI,EKFF,CEkEC,EAAE,IDsGA,EDxKM,CEkEC,AFlEA,CEkEC,GAHd,AP7DqB,CAAC,KAAD,AMsKF,CDxKhB,CLE2C,AKFrB,CCwKH,aAAa,CDxKhC,ACwKiC,KAAD,EAAQ,IAAR,CAAhB,GAAgC,KAApD;ACrGE,APhEF,AMsKD,AGxJA,EFkDG;AAJD,AP3DD,AKHI,AC0KN,AGxJA,CF2CoB,CAAtB,gBF7Dc,GAAN,CAAU,SAAV,EAAqB,IAArB;ALIJ,AKHG,GA7C6B,CA8C9B;AEmEN,APhEI,AKFE,MEkEA,oBAAoB,GACtB,CAAC,OAAD,EAA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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\ndeclare const trustedTypes: typeof window.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes!.createPolicy('lit-html', {createHTML: (s) => s});\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    let value = this.getHTML();\n    if (policy !== undefined) {\n      // this is secure because `this.strings` is a TemplateStringsArray.\n      // TODO: validate this when\n      // https://github.com/tc39/proposal-array-is-template-object is\n      // implemented.\n      value = policy.createHTML(value) as unknown as string;\n    }\n    template.innerHTML = value;\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    const parts = this.parts;\n\n    // If we're assigning an attribute via syntax like:\n    //    attr=\"${foo}\"  or  attr=${foo}\n    // but not\n    //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n    // then we don't want to coerce the attribute value into one long\n    // string. Instead we want to just return the value itself directly,\n    // so that sanitizeDOMValue can get the actual value rather than\n    // String(value)\n    // The exception is if v is an array, in which case we do want to smash\n    // it together into a string without calling String() on the array.\n    //\n    // This also allows trusted values (when using TrustedTypes) being\n    // assigned to DOM sinks without being stringified in the process.\n    if (l === 1 && strings[0] === '' && strings[1] === '') {\n      const v = parts[0].value;\n      if (typeof v === 'symbol') {\n        return String(v);\n      }\n      if (typeof v === 'string' || !isIterable(v)) {\n        return v;\n      }\n    }\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|\n    ((value: string|null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// tslint:disable-next-line:no-any\nexport type PropertyValues<T = any> =\n    keyof T extends PropertyKey ? Map<keyof T, unknown>: never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        // Type assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n        return JSON.parse(value!) as unknown;\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    const descriptor = this.getPropertyDescriptor(name, key, options);\n    if (descriptor !== undefined) {\n      Object.defineProperty(this.prototype, name, descriptor);\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   */\n  protected static getPropertyDescriptor(\n      name: PropertyKey, key: string|symbol, options: PropertyDeclaration) {\n    return {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)\n            .requestUpdateInternal(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this._classProperties && this._classProperties.get(name) ||\n        defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState!: UpdateState;\n  private _instanceProperties?: PropertyValues;\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private _updatePromise!: Promise<unknown>;\n  private _enableUpdatingResolver: ((r?: unknown) => void)|undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._updateState = 0;\n    this._updatePromise =\n        new Promise((res) => this._enableUpdatingResolver = res);\n    this._changedProperties = new Map();\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdateInternal();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection.\n    this.enableUpdating();\n  }\n\n  protected enableUpdating() {\n    if (this._enableUpdatingResolver !== undefined) {\n      this._enableUpdatingResolver();\n      this._enableUpdatingResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    const propName = (ctor._attributeToPropertyMap as AttributeMap).get(name);\n    if (propName !== undefined) {\n      const options = ctor.getPropertyOptions(propName);\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This protected version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  protected requestUpdateInternal(\n      name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      options = options || ctor.getPropertyOptions(name);\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._updatePromise = this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this.requestUpdateInternal(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this._updatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this._hasRequestedUpdate;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this._hasRequestedUpdate) {\n      return;\n    }\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      } else {\n        this._markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n      throw e;\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   * @deprecated Override `getUpdateComplete()` instead for forward\n   *     compatibility with `lit-element` 3.0 / `@lit/reactive-element`.\n   */\n  protected _getUpdateComplete() {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async getUpdateComplete() {\n   *       await super.getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n    this._markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure Compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like the Closure Compiler.\n * @category Decorator\n * @deprecated `internalProperty` has been renamed to `state` in lit-element\n *     3.0. Please update to `state` now to be compatible with 3.0.\n */\nexport function internalProperty(options?: InternalPropertyDeclaration) {\n  return property({attribute: false, hasChanged: options?.hasChanged});\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like the Closure Compiler.\n * @category Decorator\n */\nexport const state = (options?: InternalPropertyDeclaration) =>\n    internalProperty(options);\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    if (cache) {\n      const prop =\n          name !== undefined ? name : (protoOrDescriptor as ClassElement).key;\n      const key = typeof prop === 'symbol' ? Symbol() : `__${prop}`;\n      descriptor.get = function(this: LitElement) {\n        if ((this as unknown as\n             {[key: string]: Element | null})[key as string] === undefined) {\n          ((this as unknown as {[key: string]: Element | null})[key as string] =\n               this.renderRoot.querySelector(selector));\n        }\n        return (\n            this as unknown as {[key: string]: Element | null})[key as string];\n      };\n    }\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      async get(this: LitElement) {\n        await this.updateComplete;\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  // Return value typed as any to prevent TypeScript from complaining that\n  // standard decorator function signature does not match TypeScript decorator\n  // signature\n  // TODO(kschaaf): unclear why it was only failing on this decorator and not\n  // the others\n  return ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n              (name !== undefined) ?\n              legacyEventOptions(options, protoOrDescriptor as Object, name) :\n              standardEventOptions(\n                  options, protoOrDescriptor as ClassElement)) as\n             // tslint:disable-next-line:no-any decorator\n             any;\n}\n\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype as any;\nconst legacyMatches =\n    ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(\n    slotName = '', flatten = false, selector = '') {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        const slotSelector =\n            `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n        const slot = this.renderRoot.querySelector(slotSelector);\n        let nodes = slot && (slot as HTMLSlotElement).assignedNodes({flatten});\n        if (nodes && selector) {\n          nodes = nodes.filter(\n              (node) => node.nodeType === Node.ELEMENT_NODE &&\n                  // tslint:disable-next-line:no-any testing existence on older browsers\n                  ((node as any).matches ?\n                       (node as Element).matches(selector) :\n                       legacyMatches.call(node as Element, selector)));\n        }\n        return nodes;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `supportsAdoptingStyleSheets` is true then we assume\n      // CSSStyleSheet is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport {UpdatingElement as ReactiveElement} from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult, unsafeCSS} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.5.1');\n\nexport type CSSResultOrNative = CSSResult|CSSStyleSheet;\n\nexport interface CSSResultArray extends\n    Array<CSSResultOrNative|CSSResultArray> {}\n\nexport type CSSResultGroup = CSSResultOrNative|CSSResultArray;\n\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n\n  /**\n   * Reference to the underlying library method used to render the element's\n   * DOM. By default, points to the `render` method from lit-html's shady-render\n   * module.\n   *\n   * **Most users will never need to touch this property.**\n   *\n   * This  property should not be confused with the `render` instance method,\n   * which should be overridden to define a template for the element.\n   *\n   * Advanced users creating a new base class based on LitElement can override\n   * this property to point to a custom render method with a signature that\n   * matches [shady-render's `render`\n   * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n   *\n   * @nocollapse\n   */\n  static render:\n      (result: unknown, container: Element|DocumentFragment,\n       options: ShadyRenderOptions) => void = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the [[`css`]] tag function or via constructible stylesheets.\n   */\n  static styles?: CSSResultGroup;\n\n  /** @nocollapse */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  private static _styles: Array<CSSResultOrNative|CSSResult>|undefined;\n\n  /**\n   * Return the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * @nocollapse\n   */\n  static getStyles(): CSSResultGroup|undefined {\n    return this.styles;\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles() {\n    // Only gather styles once per class\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n      return;\n    }\n    // Take care not to call `this.getStyles()` multiple times since this\n    // generates new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.getStyles();\n\n    if (Array.isArray(userStyles)) {\n      // De-duplicate styles preserving the _last_ instance in the set.\n      // This is a performance optimization to avoid duplicated styles that can\n      // occur especially when composing via subclassing.\n      // The last item is kept to try to preserve the cascade order with the\n      // assumption that it's most important that last added styles override\n      // previous styles.\n      const addStyles = (styles: CSSResultArray, set: Set<CSSResultOrNative>):\n          Set<CSSResultOrNative> => styles.reduceRight(\n              (set: Set<CSSResultOrNative>, s) =>\n                  // Note: On IE set.add() does not return the set\n              Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\n              set);\n      // Array.from does not work on Set in IE, otherwise return\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n      const set = addStyles(userStyles, new Set<CSSResultOrNative>());\n      const styles: CSSResultOrNative[] = [];\n      set.forEach((v) => styles.unshift(v));\n      this._styles = styles;\n    } else {\n      this._styles = userStyles === undefined ? [] : [userStyles];\n    }\n\n    // Ensure that there are no invalid CSSStyleSheet instances here. They are\n    // invalid in two conditions.\n    // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n    //     this is impossible to check except via .replaceSync or use\n    // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n    //     false)\n    this._styles = this._styles.map((s) => {\n      if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n        // Flatten the cssText from the passed constructible stylesheet (or\n        // undetectable non-constructible stylesheet). The user might have\n        // expected to update their stylesheets over time, but the alternative\n        // is a crash.\n        const cssText = Array.prototype.slice.call(s.cssRules)\n                            .reduce((css, rule) => css + rule.cssText, '');\n        return unsafeCSS(cssText);\n      }\n      return s;\n    });\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls\n   * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n   * captures any pre-set values for registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this.constructor as typeof LitElement)._getUniqueStyles();\n    (this as {\n      renderRoot: Element|DocumentFragment;\n    }).renderRoot = this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow(\n        (this.constructor as typeof LitElement).shadowRootOptions);\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the [[`styles`]]\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => (s as CSSResult).cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const templateResult = this.render();\n    super.update(changedProperties);\n    // If render is not implemented by the component, don't call lit-html render\n    if (templateResult !== renderNotImplemented) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = (s as CSSResult).cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `NodePart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   */\n  protected render(): unknown {\n    return renderNotImplemented;\n  }\n}\n","import { LitElement, html, css } from 'lit-element'\n\nclass NavBar extends LitElement {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.logo = ''\n\t}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tlogo: {type: String}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div id='navbar'>\n\t\t\t\t<div id=\"logoGroup\">\n\t\t\t\t\t<img id=\"logo\" src=\"${this.logo}\"/>\n\t\t\t\t\t<h1 id=\"logoText\">Yield</h1>\n\t\t\t\t</div>\n\t\t\t\t<button @click=\"${this.handleClick}\" id=\"info\"><span>?</span></button>\t\n\t\t\t</div>\n\t\t`\n\t}\n\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\t#navbar {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 1fr;\n\t\t\t}\n\t\t\t#logo {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t\t#logoText {\n\t\t\t\tpadding: 1rem;\n\t\t\t\tfont-size: 1.5rem;\n\t\t\t}\n\t\t\t#logoGroup {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 4rem 1fr;\n\t\t\t\talign-items: center;\n\t\t\t\tmargin-bottom: 1rem;\n\t\t\t}\n\n\t\t\t#info {\n\t\t\t\tborder-radius: 50%;\n\t\t\t\twidth: 50px;\n\t\t\t\theight: 50px;\n\t\t\t\tfont-size: 1rem;\n\t\t\t\tcolor: #FFFFFF;\n\t\t\t\tjustify-self: end;\n\t\t\t\talign-self: center;\n\t\t\t\tdisplay: block;\n\t\t\t\tborder: 2px #FFFFFF solid;\n\t\t\t\tbox-shadow: -10px -10px 20px 0 #FAFBFF, 10px 10px 20px 0 #A6ABBD;\n\t\t\t\tbackground: linear-gradient(0deg, rgba(0,118,255,1) 0%, rgba(0,174,255,1) 100%);\n\t\t\t}\n\t\t\tbutton:focus {\n\t\t\t\toutline-style: none;\n\n\t\t\t}\n\t\t`\n\t}\n\n\thandleClick(event) {\n\t\tlet newEvent = new CustomEvent('button-click')\n\t\tthis.dispatchEvent(newEvent)\n\t}\n}\n\ncustomElements.define('nav-bar', NavBar)","import { LitElement, html, css } from 'lit-element'\n\n\nclass FormInput extends LitElement {\n\n\tconstructor() {\n\t\tsuper(),\n\t\tthis.title = '',\n\t\tthis.name = '',\n\t\tthis.type = '',\n\t\tthis.value = '',\n\t\tthis.prefix = '',\n\t\tthis.suffix = ''\n\t}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\ttitle: {type: String},\n\t\t\tname: {type: String},\n\t\t\ttype: {type: String},\n\t\t\tvalue: {type: Number},\n\t\t\tprefix: {type: String},\n\t\t\tsuffix: {type: String}\n\t\t}\n\t}\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\t#inputGroup {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\tinput {\n\t\t\t\tborder: 1px solid rgba(255,255,255,0.40);\n\t\t\t\tbox-shadow: inset -5px -5px 10px 0 #FAFBFF, inset 5px 5px 10px 0 #A6ABBD;\n\t\t\t\tbackground: #EBECF0;\n\t\t\t\t-moz-appearance: none;\n\t\t\t\t-webkit-appearance: none;\n\t\t\t\tborder-radius: 8px;\n\t\t\t\tfont-size: 1rem;\n\t\t\t\tpadding: 0.8rem;\n\t\t\t\tmin-width: 10%;\n\t\t\t\tmargin-bottom: 1rem;\n\t\t\t\tbackface-visibility: hidden;\n\t\t\t\tflex: 1;\n\t\t\t}\n\t\t\tinput:focus {\n\t\t\t\toutline-color: lightgray;\n\t\t\t}\n\t\t\t.input_icon {\n\t\t\t\tpadding: 1rem;\n\t\t\t}\n\t\t`\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div>\n\t\t\t\t<label for=\"${this.name}\">${this.title}</label>\n\t\t\t\t<div id=\"inputGroup\">\n\t\t\t\t\t<span class=\"${this.prefix ? 'input_icon' : ''}\">${this.prefix}</span>\n\t\t\t\t\t<input @input=\"${this.handleInput}\" type=\"${this.type}\" name=\"${this.name}\" value=\"${this.value}\"/>\n\t\t\t\t\t<span class=\"${this.suffix ? 'input_icon' : ''}\">${this.suffix}</span>\n\t\t\t\t </div>\n\t\t\t</div>\n\t\t`\n\t}\n\n\thandleInput(event) {\n\t\tlet newEvent = new CustomEvent('input', {\n\t\t\tdetail: {\n\t\t\t\tname: event.target.name,\n\t\t\t\tvalue: event.target.value\n\t\t\t}\n\t\t})\n\t\tthis.dispatchEvent(newEvent)\n\t}\n}\ncustomElements.define('form-input', FormInput)","import { LitElement, html, css } from 'lit-element'\n\nclass FrequencySelector extends LitElement {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.label,\n\t\tthis.name\n\t}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tlabel: {type: String},\n\t\t\tname: {type: String}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div>\n\t\t\t\t<label>${this.label}</>\n\t\t\t\t<select name=\"${this.name}\" @change=\"${this.handleChange}\">\n\t\t\t\t\t<option value=\"1\">Yearly</option>\n\t\t\t\t\t<option value=\"12\">Monthly</option>\n\t\t\t\t</select>\n\n\t\t\t</div>\n\t\t`\n\t}\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\t:host {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t\tdiv {\n\t\t\t\tdisplay: grid;\n\t\t\t}\n\t\t\tselect {\n\t\t\t\tdisplay: block;\n\t\t\t\t\tfont-size: 1rem;\n\t\t\t\t\tpadding: 0.7rem;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmax-width: 100%;\n\t\t\t\t\tfont-family: 'Comfortaa', cursive;\n\t\t\t\t\tcolor: #00AEFF;\n\t\t\t\t\ttext-indent: 45%;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\tmargin-top: 8px;\n\t\t\t\t\tbackground: #EBECF0;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tbox-shadow: -10px -10px 20px 0 #FAFBFF, 10px 10px 20px 0 #A6ABBD;\n\t\t\t\t\tborder-radius: 6px;\n\t\t\t\t\t-moz-appearance: none;\n\t\t\t\t\t-webkit-appearance: none;\n\t\t\t\t\tappearance: none;\n\t\t\t\t\tbackground-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E');\n\t\t\t\t\tbackground-repeat: no-repeat, repeat;\n\t\t\t\t\tbackground-position: right .7em top 50%, 0 0;\n\t\t\t\t\tbackground-size: .65em auto, 100%;\n\t\t\t}\n\t\t\t@media only screen and (max-width: 455px) {\n\t\t\t\tselect {\n\t\t\t\t\ttext-indent: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t}\n\n\thandleChange(event) {\n\t\tlet newEvent = new CustomEvent('input', {\n\t\t\tdetail: {\n\t\t\t\tname: event.target.name,\n\t\t\t\tvalue: event.target.value\n\t\t\t}\n\t\t})\n\t\tthis.dispatchEvent(newEvent)\n\t}\n\n}\n\ncustomElements.define('frequency-selector', FrequencySelector)","import { LitElement, html, css } from 'lit-element'\n\nimport FormInput from './form-input.js'\nimport FrequencySelector from './frequency-selector.js'\n\nclass CalculatorForm extends LitElement {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.beginning = '100',\n\t\tthis.rate = '5',\n\t\tthis.years = '10',\n\t\tthis.contribution = '100',\n\t\tthis.contributionFreq = '1'\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div class=\"tile\">\n\t\t\t\t<form class=\"input_form\">\n\t\t\t\t\t<form-input \n\t\t\t\t\t\ttitle=\"Initial Investment\" \n\t\t\t\t\t\ttype=\"number\" \n\t\t\t\t\t\tname=\"beginning\" \n\t\t\t\t\t\tvalue=\"${this.beginning}\" \n\t\t\t\t\t\tprefix=\"$\"\n\t\t\t\t\t\t@input=\"${this.handleChange}\"\n\t\t\t\t\t\t></form-input>\n\t\t\t\t\t<form-input \n\t\t\t\t\t\ttitle=\"Rate of Interest\" \n\t\t\t\t\t\ttype=\"number\" \n\t\t\t\t\t\tname=\"rate\" \n\t\t\t\t\t\tvalue=\"${this.rate}\" \n\t\t\t\t\t\tsuffix=\"%\"\n\t\t\t\t\t\t@input=\"${this.handleChange}\"\n\t\t\t\t\t\t></form-input>\n\t\t\t\t\t<form-input \n\t\t\t\t\t\ttitle=\"Calculation Period\" \n\t\t\t\t\t\ttype=\"number\" \n\t\t\t\t\t\tname=\"years\" \n\t\t\t\t\t\tvalue=\"${this.years}\" \n\t\t\t\t\t\tsuffix=\"years\"\n\t\t\t\t\t\t@input=\"${this.handleChange}\"\n\t\t\t\t\t\t></form-input>\n\t\t\t\t\t<div class=\"input_group\">\n\t\t\t\t\t\t<form-input \n\t\t\t\t\t\t\ttitle=\"Periodic Contribution\" \n\t\t\t\t\t\t\ttype=\"number\" \n\t\t\t\t\t\t\tname=\"contribution\" \n\t\t\t\t\t\t\tvalue=\"${this.contribution}\" \n\t\t\t\t\t\t\tprefix=\"$\"\n\t\t\t\t\t\t\t@input=\"${this.handleChange}\"\n\t\t\t\t\t\t\t></form-input>\n\t\t\t\t\t\t<frequency-selector @input=\"${this.handleChange}\" name=\"contributionFreq\"></frequency-selector>\n\t\t\t\t\t</div>\n\t\t\t\t\t<frequency-selector label=\"Compounding frequency\"></frequency-selector>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t`\n\t}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tbeginning: {type: Number},\n\t\t\trate: {type: Number},\n\t\t\tyears: {type: Number},\n\t\t\tcontribution: {type: Number},\n\t\t\tcontributionFreq: {type: Number}\n\t\t}\n\t}\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\t.tile {\n\t\t\t\tbackground: #EBECF0;\n\t\t\t\tborder: 1px solid rgba(255,255,255,0.40);\n\t\t\t\tbox-shadow: -5px -5px 10px 0 #FAFBFF, 5px 5px 10px 0 #A6ABBD;\n\t\t\t\tborder-radius: 6px;\n\t\t\t\tpadding: 20px;\n\t\t\t\theight: 100%;\n\t\t\t\tmargin-bottom: 2rem;\n\t\t\t}\n\t\t\t.tile {\n\t\t\t\toverflow: scroll;\n\t\t\t}\n\t\t\t.input_form {\n\t\t\t\tdisplay: grid;\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\t.input_group {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 1fr;\n\t\t\t\tgrid-gap: 8px;\n\t\t\t}\n\t\t\t\n\t\t\t@media only screen and (max-width: 455px) {\n\t\t\t\t.input_group {\n\t\t\t\t\tgrid-template-columns: 60% 1fr;\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t}\n\n\thandleChange(event) {\n\t\tlet newEvent = new CustomEvent('input', {\n\t\t\tdetail: {\n\t\t\t\tname: event.detail.name,\n\t\t\t\tvalue: event.detail.value\n\t\t\t}\n\t\t})\n\t\tthis.dispatchEvent(newEvent)\n\t\tthis[event.detail.name] = event.detail.value\n\t}\n}\n\ncustomElements.define('calculator-form', CalculatorForm)","/*\n\tInterest calculator functions\n*/\nfunction compoundedInterest(principal, rate, time, contribution=0, contributionFreq=1) {\n\tlet compounded = principal * Math.pow((1 + decimalRate(rate)), time) - principal\n\tlet contrib = (contributionFreq * contribution * Math.pow((1 + decimalRate(rate)), time) - contributionFreq * contribution) / decimalRate(rate)\n\tcontrib = contrib - (contributionFreq * contribution * time)\n\treturn compounded + contrib\n}\n\nfunction compoundedTotal(principal, rate, time, contribution=0, contributionFreq) {\n\tlet ret = principal + compoundedInterest(principal, rate, time, contribution, contributionFreq) + (contributionFreq * contribution * time)\n\tconsole.log(ret)\n\treturn ret\n}\n\nfunction interestIncreases(principal, rate, time, contribution=0, contributionFreq) {\n\tlet interests = []\n\tfor (var i=0; i <= time; i++) {\n\t\tlet interest = compoundedTotal(principal, rate, i, contribution, contributionFreq)\n\t\tinterests.push(interest)\n\t}\n\treturn interests\n}\n\nfunction decimalRate(rate) {\n\treturn rate / 100\n}\nexport {compoundedInterest, compoundedTotal, interestIncreases}","import { LitElement, html, css } from 'lit-element'\n\nimport { compoundedInterest, compoundedTotal, interestIncreases } from '../calculator.js'\n\nclass CalculatorResults extends LitElement {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.beginning,\n\t\tthis.rate,\n\t\tthis.years,\n\t\tthis.contribution,\n\t\tthis.contributionFreq\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div class=\"tile\">\n\t\t\t\t<p>In ${this.years ? this.years : '0'} years with an interest rate of ${this.rate ? this.rate : '0'}% you will have $${this.endingMoney()} with a net gain of $${this.endingInterest()}.</p>\n\t\t\t\t<slot name=\"graph\"></slot>\n\t\t\t\t<div id=\"payments\">\n\t\t\t\t\t${interestIncreases(this.beginning, this.rate, this.years, this.contribution, this.contributionFreq).map((incr, index) => html`<div class=\"payment\">Year ${index}: $${incr.toFixed(2)}</div>`)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`\n\t}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tbeginning: {type: Number},\n\t\t\trate: {type: Number},\n\t\t\tyears: {type: Number},\n\t\t\tcontribution: {type: Number},\n\t\t\tcontributionFreq: {type: Number}\n\t\t}\n\t}\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\t.tile {\n\t\t\t\tbackground: #EBECF0;\n\t\t\t\tborder: 1px solid rgba(255,255,255,0.40);\n\t\t\t\tbox-shadow: -5px -5px 10px 0 #FAFBFF, 5px 5px 10px 0 #A6ABBD;\n\t\t\t\tborder-radius: 6px;\n\t\t\t\tpadding: 20px;\n\t\t\t\tmargin-bottom: 2rem;\n\t\t\t\theight: 100%;\n\t\t\t\tcolor: rgb(4,215,165);\n\t\t\t}\n\n\t\t\t.tile {\n\t\t\t\toverflow: scroll;\n\t\t\t}\n\t\t\t#payments {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 1fr;\n\t\t\t\tgrid-gap: 6px;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t\t@media only screen and (min-width: 1024px) {\n\t\t\t\t#payments {\n\t\t\t\t\tgrid-template-columns: 1fr 1fr 1fr;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.payment {\n\t\t\t\tborder: 2px solid rgb(4,215,165);\n\t\t\t\tborder-radius: 6px;\n\t\t\t\tpadding: 0.5rem;\n\t\t\t}\n\t\t\t@media only screen and (max-width: 455px) {\n\t\t\t\t.payment {\n\t\t\t\t\tfont-size: 12px;\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t}\n\n\tendingInterest() {\n\t\tlet interest = compoundedInterest(this.beginning, this.rate, this.years, this.contribution, this.contributionFreq).toFixed(2)\n\t\treturn interest\n\t}\n\n\tendingMoney() {\n\t\tlet total = compoundedTotal(this.beginning, this.rate, this.years, this.contribution, this.contributionFreq).toFixed(2)\n\t\treturn total\n\t}\n}\n\ncustomElements.define('calculator-results', CalculatorResults)","import { LitElement, html, css } from 'lit-element'\n\nimport { interestIncreases, decimalRate } from '../calculator.js'\n\n\nclass CalculatorGraph extends LitElement {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.beginning,\n\t\tthis.rate,\n\t\tthis.years,\n\t\tthis.contribution,\n\t\tthis.contributionFreq\n\t}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tbeginning: {type: Number},\n\t\t\trate: {type: Number},\n\t\t\tyears: {type: Number},\n\t\t\tcontribution: {type: Number},\n\t\t\tcontributionFreq: {type: Number}\n\t\t}\n\t}\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\t#graph {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 30vh;\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-gap: 2px;\n\t\t\t\tgrid-auto-flow: column;\n\t\t\t\talign-items: end;\n\t\t\t\tpadding: 0.5rem;\n\t\t\t\tborder-left: 2px solid rgb(4,215,165);\n\t\t\t\tborder-bottom: 2px solid rgb(4,215,165);\n\t\t\t\tmargin-bottom: 1rem;\n\t\t\t}\n\t\t\t.bar {\n\t\t\t\tbackground: linear-gradient(0deg, rgba(4,215,165,1) 0%, rgba(10,237,209,1) 100%);\n\t\t\t\tborder-radius: 12px;\n\t\t\t}\n\t\t\t.bar:hover, .bar:active {\n\t\t\t\tpadding: 1rem;\n\t\t\t}\n\t\t\t\n\t\t\t.bar:hover > .bar_price, .bar:active > .bar_price {\n\t\t\t\tdisplay: block;\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t\ttransform: rotate(-90deg);\n\t\t\t}\n\t\t\t.bar_price {\n\t\t\t\tdisplay: none;\n\t\t\t\tcolor: #FFFF;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t\n\t\t`\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div id=\"graph\">\n\t\t\t\t${this.incrementPairs().map((pair) => html`<div class=\"bar\" style=\"height:${pair[1]}%;\"><p class=\"bar_price\">$${pair[0].toFixed(0)}</p></div>`)}\n\t\t\t</div>\n\t\t`\n\t}\n\tincrements() {\n\t\tlet increases = interestIncreases(this.beginning, this.rate, this.years, this.contribution, this.contributionFreq)\n\t\treturn increases\n\t}\n\tscaledIncrements() {\n\t\tlet increments = this.increments()\n\t\tlet maxRange = increments[increments.length-1]\n\t\tlet scaled = increments.map((incr => {\n\t\t\treturn ((incr * 100) / maxRange)\n\t\t}))\n\t\treturn scaled\n\t}\n\tincrementPairs() {\n\t\tlet incr = this.increments()\n\t\tlet scale = this.scaledIncrements()\n\t\treturn incr.map((inc, i) => {\n\t\t\treturn [inc, scale[i]]\n\t\t})\n\t}\n}\n\ncustomElements.define('calculator-graph', CalculatorGraph)","import { LitElement, html, css } from 'lit-element'\n\nclass MainButton extends LitElement {\n\n\tconstructor() {\n\t\tsuper(),\n\t\tthis.title = 'title'\n\t}\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\tbutton {\n\t\t\t\tbackground: linear-gradient(0deg, rgba(4,215,165,1) 0%, rgba(10,237,209,1) 100%);\n\t\t\t\tpadding: 1rem;\n\t\t\t\tcolor: #FFFFFF;\n\t\t\t\twidth: 100%;\n\t\t\t\tbox-shadow: -10px -10px 20px 0 #FAFBFF, 10px 10px 20px 0 #A6ABBD;\n\t\t\t\tborder-radius: 6px;\n\t\t\t\tborder: 3px solid #EBECF0;\n\t\t\t\tfont-size: 1rem;\n\t\t\t\tfont-family: 'Comfortaa', cursive;\n\t\t\t}\n\t\t\tbutton:focus {\n\t\t\t\toutline-color: lightgray;\n\t\t\t}\n\t\t`\n\t}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\ttitle: {type: String}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<button>\n\t\t\t\t${this.title}\n\t\t\t</button>\n\t\t`\n\t}\n}\n\ncustomElements.define('main-button', MainButton)","import { LitElement, html, css } from 'lit-element'\n\nclass CardFlipper extends LitElement {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = 'none'\n\t}\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\t.card {\n\t\t\t  width: 100%;\n\t\t\t  perspective: 600px;\n\t\t\t  margin-bottom: 5rem;\n\n\t\t\t}\n\n\t\t\t.content {\n\t\t\t  height: 60vh;\n\t\t\t  transition: transform 0.5s;\n\t\t\t  transform-style: preserve-3d;\n\t\t\t}\n\n\t\t\t.flip .content {\n\t\t\t  transform: rotateY( 180deg ) ;\n\t\t\t  -webkit-transform: rotateY(180deg);\n\t\t\t  transition: transform 0.5s;\n\t\t\t}\n\n\t\t\t.front,\n\t\t\t.back {\n\t\t\t  position: absolute;\n\t\t\t  height: 100%;\n\t\t\t  width: 100%;\n\t\t\t  backface-visibility: hidden;\n\t\t\t  -webkit-backface-visibility: hidden;\n\t\t\t}\n\n\t\t\t.back {\n\t\t\t  transform: rotateY( 180deg );\n\t\t\t  -webkit-transform: rotateY(180deg)\n\t\t\t}\n\t\t`\n\t}\n\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tstate: {type: String}\n\t\t}\n\t}\n\n\t// render() {\n\t// \treturn html`\n\t// \t\t<div id=\"${this.state} card\">\n\t// \t\t\t<div id=\"content\">\n\t// \t\t\t\t<div id=\"front\">\n\t// \t\t\t\t\t<slot name=\"front\"></slot>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div id=\"back\">\n\t// \t\t\t\t\t<slot name=\"back\"></slot>\n\t// \t\t\t\t</div>\n\t// \t\t\t</div>\n\t// \t\t</div>\n\t// \t`\n\t// }\n\trender() {\n\t\treturn html`\n\t\t\t<div class=\"card ${this.state == 'flip' ? 'flip' : 'none'}\">\n\t\t\t  <div class=\"content\">\n\t\t\t    <div class=\"front\">\n\t\t\t      <slot name=\"front\"></slot>\n\t\t\t    </div>\n\t\t\t    <div class=\"back\">\n\t\t\t      <slot name=\"back\"></slot>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t`\n\t}\n}\n\ncustomElements.define('card-flipper', CardFlipper)","import { LitElement, html, css } from 'lit-element'\n\nclass InfoModal extends LitElement {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.open = 'none'\n\t}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\topen: {type: String}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div id=\"modal\" class=\"${this.open == 'open' ? 'open' : 'none'}\">\n\t\t\t\t<div id=\"modalContainer\">\n\t\t\t\t\t<p>Yield is a compounded interest calculator that shows you how your\n\t\t\t\t\tinvestments will grow over time.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`\n\t}\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\t#modal {\n\t\t\t\tposition: fixed;\n\t\t\t\tz-index: 9998;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tbackground-color: rgba(0, 0, 0, .5);\n\t\t\t\tdisplay: grid;\n\t\t\t\tjustify-items: center;\n\t\t\t\talign-items: center;\n\t\t\t\tgrid-gap: 5rem;\n\t\t\t}\n\t\t\t#modalContainer {\n\t\t\t\tbackground-color: #EBECF0;\n\t\t\t\tborder-radius: 6px;\n\t\t\t\twidth: 80vw;\n\t\t\t\tpadding: 1rem;\n\t\t\t}\n\t\t\t.open {\n\t\t\t\tbackground-color: green;\n\t\t\t\tvisibility: visible;\n\t\t\t}\n\t\t\t.none {\n\t\t\t\tvisibility: hidden;\n\t\t\t}\n\t\t`\n\t}\n} \n\ncustomElements.define('info-modal', InfoModal)","import { LitElement, html, css } from 'lit-element'\n\nimport NavBar from './nav-bar.js'\nimport CalculatorForm from './calculator-form.js'\nimport CalculatorResults from './calculator-results.js'\nimport CalculatorGraph from './calculator-graph.js'\nimport MainButton from './main-button.js'\nimport CardFlipper from './card-flipper.js'\nimport InfoModal from './info-modal.js'\nconst logo = require('../assets/yield_logo_small.svg')\n\nclass AppContainer extends LitElement {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.beginning = 100,\n\t\tthis.rate = 5,\n\t\tthis.years = 10,\n\t\tthis.contribution = 100,\n\t\tthis.contributionFreq = 1,\n\t\tthis.flip = false,\n\t\tthis.infoModal = false\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div id=\"app\">\n\t\t\t\t<nav-bar logo=\"${logo}\" @button-click=\"${this.handleInfoButton}\"></nav-bar>\n\t\t\t\t<card-flipper state=\"${this.flip ? 'flip' : 'none'}\">\n\t\t\t\t\t<calculator-form slot=\"front\" @input=\"${this.handleInput}\"></calculator-form>\n\t\t\t\t\t<calculator-results \n\t\t\t\t\t\tslot=\"back\"\n\t\t\t\t\t\tbeginning=\"${this.beginning}\"\n\t\t\t\t\t\trate=\"${this.rate}\"\n\t\t\t\t\t\tyears=\"${this.years}\"\n\t\t\t\t\t\tcontribution=\"${this.contribution}\"\n\t\t\t\t\t\tcontributionFreq=\"${this.contributionFreq}\">\n\t\t\t\t\t\t<calculator-graph\n\t\t\t\t\t\t\tslot=\"graph\"\n\t\t\t\t\t\t\tbeginning=\"${this.beginning}\"\n\t\t\t\t\t\t\trate=\"${this.rate}\"\n\t\t\t\t\t\t\tyears=\"${this.years}\"\n\t\t\t\t\t\t\tcontribution=\"${this.contribution}\"\n\t\t\t\t\t\t\tcontributionFreq=\"${this.contributionFreq}\"></calculator-graph>\n\t\t\t\t\t</calculator-results>\n\t\t\t\t</card-flipper>\n\t\t\t\t<main-button @click=\"${this.handleClick}\" title=\"${this.flip ? 'Reset' : 'Calculate'}\"></main-button>\n\t\t\t\t<info-modal open=\"${this.infoModal ? 'open' : 'none'}\"></info-modal>\n\t\t\t</div>\n\t\t`\n\t}\n\n\tstatic get styles() {\n\t\treturn css`\n\t\t\t:host {\n\t\t\t\tbackground-color: #EBECF0;\n\t\t\t\tfont-family: 'Comfortaa', cursive;\n\t\t\t\tfont-style: normal;\n\t\t\t\tfont-weight: 200;\n\t\t\t\tdisplay: grid;\n\t\t\t}\n\t\t\t#app {\n\t\t\t\tmargin: 1rem;\n\t\t\t\tmargin-top: 0;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tpadding-top: 0;\n\t\t\t\tpadding-bottom: 0;\n\t\t\t\tdisplay: grid;\n\t\t\t\theight: 100vh;\n\t\t\t\tmax-height: 100vh;\n\t\t\t\tgrid-template-rows: 1fr 5fr 1fr;\n\t\t\t}\n\t\t\t@media only screen and (min-width: 1024px) {\n\t\t\t\t#app {\n\t\t\t\t\twidth: 70vw;\n\t\t\t\t\tjustify-self: center;\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t}\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tbeginning: {type: String},\n\t\t\trate: {type: String},\n\t\t\tyears: {type: String},\n\t\t\tcontribution: {type: String},\n\t\t\tcontributionFreq: {type: String},\n\t\t\tflip: {type: Boolean},\n\t\t\tinfoModal: {type: String}\n\t\t}\n\t}\n\thandleInfoButton(event) {\n\t\tthis.infoModal = this.infoModal ? false : true\n\t\tsetTimeout(() => {this.infoModal = false}, 3000)\n\t}\n\thandleClick(event) {\n\t\tthis.flip = this.flip ? false : true\n\t}\n\n\thandleInput(event) {\n\t\tconsole.log(event.detail)\n\t\tthis[event.detail.name] = event.detail.value\n\t}\n}\ncustomElements.define('app-container', AppContainer)","import AppContainer from './components/app-container.js'\n\nfunction render(element, app) {\n\twindow.onload = () => {\n\t\tdocument.getElementById(element).appendChild(app)\n\t}\n}\n\nconst app = customElements.get('app-container')\nconst appElement = new app()\n\nrender('app', appElement)"]}